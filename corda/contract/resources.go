// Code generated by go-bindata.
// sources:
// resources/kotlin.concept.template
// resources/kotlin.contract.template
// resources/kotlin.pom.xml
// resources/kotlin.state.template
// DO NOT EDIT!

package contract

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesKotlinConceptTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\x6f\xd3\x30\x14\x7d\xcf\xaf\xb8\x8d\xa6\x29\xd5\xa6\x08\x5e\x2b\xc2\x28\x65\x42\x08\x54\x90\xb6\x3f\xe0\xa5\xb7\xc3\xc3\xb5\x33\xfb\xa6\x52\x70\xfd\xdf\x91\x9d\xb4\xcd\xe7\x04\x48\xbc\x91\x87\x7c\xf9\xe4\xdc\xe3\x73\xcf\x4d\xc1\xf2\x1f\xec\x11\xc1\xda\x74\x7d\xe7\x5c\x14\xf1\x5d\xa1\x34\x81\x44\x4a\x73\xa5\x37\xcc\x9f\x31\x35\xa8\x39\x13\xfc\x27\x23\xae\x64\xba\xf2\x0b\x77\xc7\x57\x0f\x02\x27\xbe\xe2\x1b\x94\xc4\xa9\x4a\x97\x0f\x86\x34\xcb\xe9\x1b\xd3\x54\x1d\xc1\x4f\x6c\xcf\xd2\x92\xb8\x48\x57\xa5\xd6\x28\xf3\x2a\x8a\xde\x0d\xa9\xad\xdd\xe0\x96\x4b\x84\x78\x49\xa4\x3f\x60\x2e\x62\x70\x6e\xcf\x34\x58\x0b\xe9\x9a\xed\x10\x9c\x5b\xf8\x87\x8b\x03\x7c\x44\xfa\xac\x48\x70\x79\x5f\x15\xe8\x9c\xb5\x7c\x0b\xf8\x0c\xe9\x27\xf3\xb5\xf0\xd2\x99\x00\xd2\x25\x3a\x77\x63\x2d\xca\x8d\x47\x84\x4b\xa4\x0a\x94\x90\x0b\x66\x8c\xb7\x62\xe5\x6f\x9c\x4b\xac\xd5\x4c\x3e\x22\x5c\xf0\x6b\xb8\x60\x44\x1a\x16\x19\xa4\x5e\x07\x7f\x28\x09\x4d\x53\x41\x7a\x04\xbc\xf2\x4f\xf1\x75\x7c\x22\xb5\x96\x70\x57\x08\x46\x1d\xed\x81\xe7\x84\x99\x83\x8d\x00\x00\xc2\x49\xed\x51\x6b\xbe\x41\xd8\x96\x12\x48\xdd\x91\xe6\xf2\x31\x99\xc3\x02\xea\xdb\x1a\x1a\x0e\xbf\xff\x27\xa3\xe4\xa2\x5e\x81\x0c\x62\x1b\x9f\x97\x4f\xc2\x47\x45\xb7\x71\xb5\x41\x01\xd7\x76\x69\xcb\x84\xc1\x36\xd2\x17\x83\xac\xbe\x5c\x05\xb7\xfd\x27\x07\xb8\x57\xb5\xe1\x8d\x0e\xe7\xe0\x0a\xe2\xeb\x8e\x14\xec\x51\xf1\x6d\x62\x6d\x5d\xd1\xb7\xcf\x39\x98\x65\x20\x4b\x21\x82\x9a\xa3\x94\xa5\xd6\xac\x72\x0e\x2e\x2f\xa1\x8b\x9e\xcd\x52\x6e\xd6\x8a\x6e\x77\x05\x55\xc9\xfc\x68\x64\xcb\x9c\x49\xb9\xf0\x1b\x7a\x3b\xee\x74\x32\x32\x46\x9e\x6e\xb4\x2a\xbe\x30\x43\xc9\xeb\xf9\x94\x59\xb1\x6b\xd1\x6b\xa4\x52\xcb\xb0\x14\xd5\xe5\xa2\x7e\xe7\xf1\xb9\x64\xc2\x24\x8a\xbe\xa3\x5e\xc0\x52\x56\x37\xf3\x05\xbc\x57\x4a\x20\x93\x00\xb6\x63\x64\x00\x01\x6f\xa7\x76\x0e\x5d\x2b\xf6\x3e\xf4\x0a\x32\xa8\xb1\xcc\x40\xd2\x02\xf7\xa0\x9e\xeb\xd6\xd7\x3f\x57\xcc\xc2\xc8\x44\x83\x68\x4d\xce\x44\x87\x72\x7a\x04\x3b\xb0\x61\x26\xb2\x3a\x13\xbe\xff\xa4\xd2\xf1\xc5\xae\xfa\xc0\x53\xab\xef\x8b\xf6\x87\x8f\xa1\xaf\xf3\x47\x85\x9a\x64\xce\xe1\x70\x80\x89\xd4\xbe\xac\x70\x28\xb1\x49\x40\x98\xb0\xa1\x40\x3b\xc0\xf7\x67\x34\x0c\xc6\x98\x87\x8d\x8f\xb3\xc1\xb8\xe4\x4a\x12\xe3\xd2\x2c\x85\x48\x82\xd2\xa3\x48\x66\x60\xa5\x84\xc0\xdc\x37\xe6\xcd\x79\xa8\x3b\xbf\xd1\xb5\x6a\x46\xf1\xed\xc8\x66\x5e\xdc\x10\x8c\x8e\xff\x49\x29\x8c\x48\x6d\xb2\xdf\x56\xf9\x97\x55\xbb\x23\xdb\xb6\x78\x94\xee\x85\xe0\xf4\x03\x3d\xb1\xa1\x7f\xd0\xa7\x4e\xa2\xfe\x37\xeb\x2c\x67\xba\x59\x7d\xb2\x31\xf2\x46\x4d\xc3\x72\x5a\x72\x63\x13\x38\xaa\xdc\x35\xbf\x6e\xf7\x2b\x00\x00\xff\xff\xbc\x48\xb9\x08\x3f\x09\x00\x00")

func resourcesKotlinConceptTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinConceptTemplate,
		"resources/kotlin.concept.template",
	)
}

func resourcesKotlinConceptTemplate() (*asset, error) {
	bytes, err := resourcesKotlinConceptTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.concept.template", size: 2367, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\x38\x4c\x1f\x1c\x08\x62\x0c\xb6\x87\x8c\x42\x8b\xcb\xb6\x76\xa3\x83\x3a\xb0\xc7\x72\x91\xaf\x89\x3a\x5b\x32\xd2\xd9\x6b\xe7\xe9\xbf\x0f\xc9\x76\xea\x34\xee\xc3\xf2\x10\x45\xa7\xef\xfb\xee\xee\xd3\x29\x35\xca\x5f\xb8\x23\xe8\x3a\x71\x9b\x7b\xbf\x58\xa8\xaa\x36\x96\x41\x9a\x4a\xb0\xda\x4a\x23\x0a\xd3\x12\xa3\x2a\x85\x34\x9a\x51\x69\xb2\x42\x1a\x5b\xa0\xc8\xc2\x77\x66\xaa\x0a\x75\x71\x85\x8c\x3f\x15\xef\xc3\xfa\xbf\x12\x9f\x4b\xf3\x3b\x33\x9a\x2d\x4a\x1e\xb9\x9a\x78\x80\x48\x63\x29\xf2\xc2\xb1\x13\x23\xf0\xd3\x1b\x48\xb6\xa8\x1d\x4a\x56\x46\x3b\xf1\x9d\x8a\x1d\xd9\xcd\x4b\x68\x24\x3d\x62\x8b\x42\x19\x71\xad\xeb\x86\x73\xb6\x84\xd5\x1b\x7a\x8e\xac\xc2\x52\xfd\xc1\x40\xef\xeb\xcd\xc7\xd0\xb6\xa4\x23\xc1\x86\x55\x29\xb2\xc6\x5a\xd2\xf2\x79\xb1\xb8\x38\x45\xd7\xcd\xb6\x54\x12\x64\x89\xce\x05\xcb\xc7\x6e\xb2\x10\xf0\x7e\xdc\xc2\x1a\x4e\x9c\x49\x97\x2b\x38\x9c\x77\x0b\x00\x08\x06\xd7\xa8\x95\xd1\x60\xb6\x8f\x74\x08\x87\xcf\xc5\x4d\x5b\xe5\x8c\xac\xe4\x21\xd4\x62\x09\x5d\x77\xf6\x3a\xe7\x7d\xf6\xe3\x76\x73\x77\x99\x6d\xee\xaf\xaf\xe0\x1c\x92\x00\x09\x93\x20\x66\xb0\xe3\x36\x89\xa2\x1e\xe2\xd2\x75\x16\xf5\x8e\xe0\x8c\x9f\x34\xac\xcf\x41\x0c\x23\xe1\xc0\xfb\x08\x98\xf1\x21\x56\x3f\x98\x10\x89\xe2\x16\x2b\x02\xef\xd3\x83\x9a\x5a\xc1\x19\x32\xdb\x20\x19\x11\x97\xcc\x56\x6d\x1b\x26\xe7\x7d\xd7\xa9\x07\xd0\x01\x05\xef\xc2\x2e\x59\x25\x61\x21\x5d\x78\x3f\x36\x1a\xc8\x51\xd6\xfb\x75\x4c\x13\xd5\xfe\xc2\x17\xe2\x6f\x86\x4b\xa5\x37\xcf\x75\x48\x19\x3a\x88\xc4\xe5\x68\xfb\xcc\x4c\xa7\xcb\x89\xb9\x4a\xab\xa9\xd7\x47\x26\xbc\x59\xf2\x11\xbc\x6e\x38\xaa\x26\xc7\x75\x26\xab\x57\x85\x2f\x87\xd2\xe6\xc9\xb2\xaf\x33\x59\xc5\x5b\x8b\x2e\x0e\x17\x37\x3a\xea\x7d\xb2\x3c\x70\x7b\x15\x3f\x5c\xda\x8b\xae\x69\xc9\x5a\x55\x10\x3c\x34\x1a\x76\xc4\x77\xe4\x4c\x63\x25\x7d\x45\xb7\x4f\x97\x6b\xc8\xd9\x2a\xbd\x9b\x34\x6c\x89\x1b\xab\x43\x52\x10\x61\x44\x7b\x53\xc3\xaf\x7c\x8f\xef\x3f\x7c\x04\xef\x87\x09\x59\xcc\x26\x98\x3c\xc8\x1b\x67\x74\xc8\x31\x79\x88\xa7\x89\x78\xaf\x9c\x08\x2f\x2c\x8e\xa1\x98\x94\x78\xe9\x7a\x4e\x9a\x1c\xbd\xfb\x47\x67\xf4\xd0\xf8\x5c\x09\x2d\x59\xf5\xf0\x9c\xf2\xd3\x1a\x4e\xfe\x21\xa6\xf7\xdc\xe3\x26\x87\x29\x3f\x8d\xaa\xfe\x5f\x00\x00\x00\xff\xff\x65\xbd\x18\xd1\x39\x05\x00\x00")

func resourcesKotlinContractTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractTemplate,
		"resources/kotlin.contract.template",
	)
}

func resourcesKotlinContractTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contract.template", size: 1337, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinPomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4d\x8f\xdb\x36\x10\x3d\x7b\x7f\x05\xbb\xd8\x4b\x81\x88\xb4\x77\xdb\x22\x58\xb0\xba\x74\x7b\x48\x91\xb4\x45\x52\x04\x05\x7a\xa2\xa9\xb1\x96\xae\x44\x0a\x24\x65\xbb\x30\xfc\xdf\x0b\x7e\xe8\x83\xb2\xb4\xdb\x06\x88\x2f\x16\x67\xde\xcc\xbc\xd1\x90\x8f\xa2\x8d\x56\x7b\xe0\x16\x9d\xea\x4a\x9a\x1f\x6f\x9f\xad\x6d\x1e\x09\xa9\xd9\x01\x24\x66\x0d\xe3\xcf\x80\x95\x2e\xc9\xef\xbf\x7d\x20\xdf\xe1\x35\x5e\xdf\x06\xe4\xe3\xc9\x88\x1e\x7d\x3c\x1e\xf1\xf1\xc1\xe3\xee\xd7\xeb\x0d\xf9\xf3\xc3\xfb\x4f\xfc\x19\x6a\x96\x09\x69\x2c\x93\x1c\x6e\xd1\xc9\x88\x47\xe3\x8d\xef\x15\x67\x56\x28\xf9\x1f\x8a\xa1\x25\xc4\xc9\x14\xc1\x98\x79\x1c\x3e\x99\xe2\x36\xbf\x41\x88\xd6\xaa\x80\xea\x33\x68\x23\x94\xcc\xbd\x8f\x92\xc4\xe6\x40\x8d\x56\x0d\x68\x2b\xc0\xb8\x25\x42\x74\xcb\x0c\x3c\x09\x9d\x13\x0b\x75\x43\x49\xb7\xbc\x59\xad\x68\xa9\x55\xdb\xbc\x2b\xf2\xf8\x4f\x49\x67\xb8\x41\x68\x45\x99\xb6\x62\xc7\xb8\x7d\x57\xe4\xc3\x23\x25\x23\xb3\x87\x1d\x62\xf1\xf8\x4f\xc9\x61\x60\xe3\x48\xfb\xf6\xb8\xaa\x1b\x51\x81\xc6\x96\xe9\x12\x6c\xbe\xc1\x6f\x29\x99\x77\xcd\x86\x19\xd5\x6a\x0e\xb3\x61\xd1\x15\xc2\xfe\x56\xb6\x12\x12\x77\x14\x36\x78\x83\x7f\x58\x53\x32\x31\xbb\xde\xa3\xa9\x4f\x53\x31\x59\xb6\xac\x84\xcf\x43\x68\x1f\xb7\x08\x9a\x4b\xc4\x1a\xf1\x62\x8e\x91\x7f\x2e\x7c\x7f\xa8\xff\x18\xbd\xa3\x65\xf7\x0d\x25\xe9\xac\xfb\x71\xde\x9d\xe3\xd3\x25\x99\xe8\x78\xa0\x77\xe7\x61\x71\x99\xce\xb4\x1f\xe9\xdd\x39\x3e\x5d\x92\xa9\xd2\x02\x1a\x90\x05\x48\xee\x2b\xaf\x56\x83\xe1\x9f\x30\x07\x3f\x8b\xae\xb4\xd2\x25\xde\x83\xdd\x6a\x26\xa4\xc1\xa1\xa1\x84\x58\xc4\x8f\x48\x04\x50\x66\x6c\x51\x89\x6d\xb6\xd7\xf0\x76\xca\x31\xc6\x0c\x4c\xd3\x11\x5f\xa6\xdb\x90\xa4\x14\xa7\x94\x47\x87\x41\x82\xc5\x5c\xe9\x82\xa5\xc7\x21\x39\x0f\xde\x9f\x71\xa5\xe1\xea\x3c\x0c\x07\xe2\xaf\x7b\x77\x44\xdf\x7c\x9b\x50\x59\x7d\x15\x26\x3b\x21\x9d\x12\x7d\x4d\x32\x5c\xd5\xd8\x8a\x2d\x57\xb8\x50\x07\xb0\x4c\x54\x2f\xb0\xea\x20\x59\xa4\xbf\x4c\x6b\x8d\x37\x78\xfd\x06\xbd\xc2\x6b\xb4\xee\x36\xbb\x86\x46\x19\x61\x95\x1e\x94\xae\x37\xf5\xbb\x90\x1a\xc9\x1a\xf3\xac\xac\x19\xed\x19\x90\x6c\x5b\x41\x91\xef\x58\x65\x80\x92\x6e\xd9\x85\x90\xab\x18\x2a\x8a\x9c\x83\xb4\x9a\x55\x94\x88\x01\x29\x59\x0d\xf9\x4f\xc1\x81\x3e\xf6\xc5\x29\xf1\x8e\x0e\xd5\xea\x2a\x77\x52\x6f\x1e\x09\x71\x0c\xf1\x95\xe0\x7b\xc3\x3d\x25\x0e\x19\x77\x6b\xda\xca\x68\xdd\xb5\xbf\x6d\x45\x15\x05\xb8\x10\x1a\xb8\x87\xde\x9d\xa3\xba\x5f\x28\x19\xac\x21\x65\x90\xc9\xa7\x19\x2c\x31\x9a\x93\x9a\x09\x49\xba\xb3\x39\xc5\x86\x0c\xaa\xb5\x4d\x6b\x67\x33\x04\xe9\x8e\xf1\x84\x57\xcc\x18\x30\x94\x4c\x23\xba\x31\x85\xfc\xc3\xfb\xed\x2c\xa3\x21\xcd\x35\x35\x10\xed\x53\x5c\xf5\x19\x5e\x56\x72\x27\x90\x49\x41\xea\x4e\x4b\xf5\xab\x9b\x51\xd4\x99\xbb\x73\xfc\x52\xc0\x23\x55\x1c\x59\x07\x51\x19\x42\x43\xaa\xa6\x6a\x4b\x21\x4d\xb2\x5a\x90\xc0\x38\xf0\x30\xfd\x18\xf7\x8a\x0c\x86\xaf\x80\x3d\xd3\x59\xc0\xbf\x22\x82\xf7\xf8\xc1\x5d\x38\x89\xf0\x79\x00\x57\x72\x27\xca\x56\xfb\x4f\x93\xc1\xfe\xca\x54\x17\xe6\x17\xde\xe9\x4c\x4a\x4a\xba\xfe\x57\xab\xab\x57\xb1\xa0\xf0\xa1\xc3\x97\xba\xfb\x92\xab\xe4\x7f\x5d\x0d\x83\x2e\x9c\x80\xb7\xae\x1d\x93\x3a\x52\xe7\xb5\xaf\x97\x88\x70\x47\x8f\x25\x62\x02\x2a\x15\xab\x4c\x1e\xfe\x07\xb8\x5f\xa1\xf0\x3f\x57\x9a\x2c\xd4\x1e\x39\xfc\x2d\xec\x7e\x4b\xa3\x76\x2e\xa9\x8e\x4c\xcb\xdc\xea\x16\x28\x89\x0b\x84\xe8\x37\x59\x86\x9e\x84\x71\x22\x88\x9c\x4d\xc8\xd2\xa0\x2c\x4b\x63\x99\x2e\x27\xd4\x82\x31\xcf\xf6\xec\xc0\xb2\x86\x69\x56\x83\x05\x6d\xdc\x10\xcb\x3c\x64\xfd\xd9\x2b\x2b\x32\x56\x0b\x6e\x91\xfb\x52\x45\x3b\xa5\xd1\x2f\x9f\x3e\x66\x0f\xeb\xef\x11\x93\x52\x59\xcf\xf3\xba\x1e\x09\x05\x57\xb1\xab\xb9\xed\x86\x92\x2d\xd7\x3d\x39\x96\x94\x44\x75\xf4\x5f\x48\xee\x04\xe7\xff\x06\x00\x00\xff\xff\x0b\xc9\x77\xe0\x0b\x0c\x00\x00")

func resourcesKotlinPomXmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinPomXml,
		"resources/kotlin.pom.xml",
	)
}

func resourcesKotlinPomXml() (*asset, error) {
	bytes, err := resourcesKotlinPomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.pom.xml", size: 3083, mode: os.FileMode(420), modTime: time.Unix(1543606176, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinStateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcd\x6e\xf3\x36\x10\xbc\xeb\x29\xd6\xc2\x87\x0f\x12\x12\x08\xed\x55\x88\x92\xba\x46\x50\x04\x0d\xdc\x00\xce\x0b\x30\x32\xed\x32\xa5\x49\x85\x5c\x19\x70\x69\xbe\x7b\x41\x4a\x96\x45\xfd\x04\x68\xd0\xf6\x54\x1d\x6c\x49\x5c\xce\x0e\x67\x67\x57\x15\x29\xff\x20\x7b\x0a\xc6\x64\xeb\x8d\xb5\x51\xc4\x0e\x95\x54\x08\x82\x62\x56\x4a\xb5\x25\xee\x97\x66\x6c\x4b\x05\x32\x3c\x65\xcb\x37\x8d\x8a\x94\xf8\x42\x14\x9e\x2e\xc1\xef\xe4\x48\xb2\x1a\x19\xcf\x56\xb5\x52\x54\x94\xa7\x19\x18\x4d\x15\x23\x9c\xfd\x49\x90\x49\x91\xad\xdc\xc2\xe6\xf2\xea\x8d\xd3\x28\x32\x66\x4b\x77\x4c\x50\x88\xe5\x91\x2a\xc5\xb6\x34\xb6\xd6\x18\xb6\x03\xfa\x01\xd9\x9a\x1c\x28\xc4\x9c\x09\x4a\xd4\xd3\x36\xb6\xf6\x12\x04\x47\xc2\x8d\xa1\x5c\x53\x6b\x8f\x44\x19\x43\xc5\xd6\xed\xf3\x7f\x51\xb7\xdf\x27\x5c\x71\xa2\x35\xc4\xb1\xb5\xd1\x4f\x63\x06\xa5\x5f\x35\x26\xf3\x61\xd6\x26\xc6\x28\x22\xf6\x14\xbe\xb1\x5b\xf8\x46\x10\x15\xe4\x05\x64\x4b\x44\xc5\xde\x6a\xa4\xba\xa5\x27\x5c\x04\xfc\xe0\x9e\xe2\xdb\xb8\xcb\x0d\x47\xa2\xc0\x18\xbf\xd1\xd3\xb7\x36\x07\x63\x1a\xa4\x33\xfc\x42\xf1\x57\x89\x9c\x89\xd7\x53\x45\xaf\x07\x6d\xc2\x9f\xf4\x6f\x95\xd3\x89\x70\x40\x55\x53\x6b\x1f\xc2\x73\xa5\xf9\x40\xdd\x52\x0a\x5f\x1b\x9d\xad\xda\xbb\x0d\x12\xa4\x26\x6a\xa4\x81\x09\x15\x66\x11\x9e\xbd\xc8\x7e\xff\x7f\xa3\x94\x31\x48\x0f\x15\x27\xd8\xaf\x7d\x83\x63\xed\x3f\x2e\x21\x5c\x34\xf4\xf1\x3d\x49\xac\x85\xdc\x1f\xaa\xf7\xa6\xdb\x13\x5d\xee\x00\x22\x00\x80\xbe\xfd\xa0\x22\x0a\x59\xc9\x2a\x22\x50\x43\x0e\xcf\x4c\xe3\x5d\xd0\x2d\xf7\x7e\x8f\xbb\xf6\x14\x93\xd4\x40\xf7\xec\xae\x11\x44\x01\x4b\xa5\xc8\x69\x02\x27\x49\x83\x9d\x4e\x0b\xf0\x42\xbc\xf4\xf6\x5b\x1b\x04\x29\x8a\xb5\x12\x41\x86\x6e\xdd\x46\xe1\x69\x76\xb5\x00\x94\x1b\x54\x4c\xec\x93\x14\x72\x68\x6e\x4d\xd4\x23\xab\xe0\x5d\x4b\x91\x37\x2b\x50\x40\x6c\xe2\xa8\xc7\xa8\x75\xc2\xa4\x0b\xfa\x71\x33\xc5\xda\x11\xdf\xca\xd7\x48\x97\x0c\x8a\xe6\xef\xa6\xab\x3e\x9c\xe1\x55\x36\xd5\x6f\x89\x58\x0b\x37\x10\xdf\x06\x5c\xe8\x00\x8b\xed\x92\xd0\x4e\xb0\x28\x40\xd4\x9c\x7b\x3a\x17\x2e\x5e\x7c\x6b\xe1\xfb\xf7\x81\xf9\x16\x8b\x8c\xe9\xb5\xc4\xc7\x43\x85\xa7\x24\xed\x8c\x14\xc8\xfd\x75\xbe\x10\xe8\x13\xcc\xb1\x29\xf4\x6c\xab\x64\xf5\x4c\x34\x26\x3f\xa6\x73\x72\xc5\xb6\x87\xdf\x1a\xc1\x2d\x45\x73\xc5\xa7\x1f\x35\xe1\x3a\x91\xf8\x3b\x55\x39\x2c\xc5\xe9\x21\xcd\xe1\x67\x29\x39\x25\x02\xc0\x04\x52\xfa\x20\x60\xfd\x49\x90\x82\x19\x59\x1b\x25\x14\xd0\xc4\x12\x0d\x49\x2f\x78\x10\xea\xb0\x1e\x5d\xfe\x6b\xc6\xc2\x37\x6f\x34\x72\xd7\xec\x9c\x19\xb4\x47\x3b\xf7\x46\xc3\x20\x08\x1b\xbb\xa2\x68\x5c\xe1\x1c\x80\x32\x9b\x5e\x0c\xd9\x7b\x9c\x86\xfd\x90\xb4\xbb\xda\x21\x9c\xfc\xad\x44\xad\x37\x53\x38\x9f\x61\xc6\xb7\x9f\x33\x1c\x53\x6c\x2d\xe0\x9b\x6c\x4c\xd0\x8c\xe2\x87\x6d\xea\x5b\x63\x4a\xc3\x56\xc7\xc5\xa8\x61\xdc\x77\x85\x30\xa1\x97\x9c\x27\x9e\xe9\x85\x24\xd1\xb0\x92\x9c\xd3\xd2\x15\xe6\xae\xd7\x27\xc1\x58\x5f\xcb\xb6\x1b\xef\x27\x4e\xf3\xe9\x89\x60\x72\x02\x74\x54\x61\x82\x6b\x6b\xfe\x3e\xcd\x2f\x66\x0d\x9b\xb6\xaf\xf1\x24\xdc\x27\xce\x19\x3a\x7a\xe6\x40\xff\x42\xa1\x02\x4b\xfd\x5f\xad\x1e\x9d\xf9\x6a\x0d\xc1\xa6\xc0\x5b\x36\x2d\xca\xf5\x53\x3c\xd5\x83\x93\xcc\x6d\x3b\xbd\x6d\xf4\x57\x00\x00\x00\xff\xff\x5c\xa0\x71\x05\xc3\x0b\x00\x00")

func resourcesKotlinStateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinStateTemplate,
		"resources/kotlin.state.template",
	)
}

func resourcesKotlinStateTemplate() (*asset, error) {
	bytes, err := resourcesKotlinStateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.template", size: 3011, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/kotlin.concept.template": resourcesKotlinConceptTemplate,
	"resources/kotlin.contract.template": resourcesKotlinContractTemplate,
	"resources/kotlin.pom.xml": resourcesKotlinPomXml,
	"resources/kotlin.state.template": resourcesKotlinStateTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"kotlin.concept.template": &bintree{resourcesKotlinConceptTemplate, map[string]*bintree{}},
		"kotlin.contract.template": &bintree{resourcesKotlinContractTemplate, map[string]*bintree{}},
		"kotlin.pom.xml": &bintree{resourcesKotlinPomXml, map[string]*bintree{}},
		"kotlin.state.template": &bintree{resourcesKotlinStateTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

