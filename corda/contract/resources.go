// Code generated by go-bindata.
// sources:
// resources/kotlin.concept.template
// resources/kotlin.contract.template
// resources/kotlin.contractimpl.template
// resources/kotlin.pom.xml
// resources/kotlin.state.1.template
// resources/kotlin.state.template
// DO NOT EDIT!

package contract

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesKotlinConceptTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\x6f\xd3\x30\x14\x7d\xcf\xaf\xb8\x8d\xa6\x29\xd5\xa6\x08\x5e\x2b\xc2\x28\x65\x42\x08\x54\x90\xb6\x3f\xe0\xa5\xb7\xc3\xc3\xb5\x33\xfb\xa6\x52\x70\xfd\xdf\x91\x9d\xb4\xcd\xe7\x04\x48\xbc\x91\x87\x7c\xf9\xe4\xdc\xe3\x73\xcf\x4d\xc1\xf2\x1f\xec\x11\xc1\xda\x74\x7d\xe7\x5c\x14\xf1\x5d\xa1\x34\x81\x44\x4a\x73\xa5\x37\xcc\x9f\x31\x35\xa8\x39\x13\xfc\x27\x23\xae\x64\xba\xf2\x0b\x77\xc7\x57\x0f\x02\x27\xbe\xe2\x1b\x94\xc4\xa9\x4a\x97\x0f\x86\x34\xcb\xe9\x1b\xd3\x54\x1d\xc1\x4f\x6c\xcf\xd2\x92\xb8\x48\x57\xa5\xd6\x28\xf3\x2a\x8a\xde\x0d\xa9\xad\xdd\xe0\x96\x4b\x84\x78\x49\xa4\x3f\x60\x2e\x62\x70\x6e\xcf\x34\x58\x0b\xe9\x9a\xed\x10\x9c\x5b\xf8\x87\x8b\x03\x7c\x44\xfa\xac\x48\x70\x79\x5f\x15\xe8\x9c\xb5\x7c\x0b\xf8\x0c\xe9\x27\xf3\xb5\xf0\xd2\x99\x00\xd2\x25\x3a\x77\x63\x2d\xca\x8d\x47\x84\x4b\xa4\x0a\x94\x90\x0b\x66\x8c\xb7\x62\xe5\x6f\x9c\x4b\xac\xd5\x4c\x3e\x22\x5c\xf0\x6b\xb8\x60\x44\x1a\x16\x19\xa4\x5e\x07\x7f\x28\x09\x4d\x53\x41\x7a\x04\xbc\xf2\x4f\xf1\x75\x7c\x22\xb5\x96\x70\x57\x08\x46\x1d\xed\x81\xe7\x84\x99\x83\x8d\x00\x00\xc2\x49\xed\x51\x6b\xbe\x41\xd8\x96\x12\x48\xdd\x91\xe6\xf2\x31\x99\xc3\x02\xea\xdb\x1a\x1a\x0e\xbf\xff\x27\xa3\xe4\xa2\x5e\x81\x0c\x62\x1b\x9f\x97\x4f\xc2\x47\x45\xb7\x71\xb5\x41\x01\xd7\x76\x69\xcb\x84\xc1\x36\xd2\x17\x83\xac\xbe\x5c\x05\xb7\xfd\x27\x07\xb8\x57\xb5\xe1\x8d\x0e\xe7\xe0\x0a\xe2\xeb\x8e\x14\xec\x51\xf1\x6d\x62\x6d\x5d\xd1\xb7\xcf\x39\x98\x65\x20\x4b\x21\x82\x9a\xa3\x94\xa5\xd6\xac\x72\x0e\x2e\x2f\xa1\x8b\x9e\xcd\x52\x6e\xd6\x8a\x6e\x77\x05\x55\xc9\xfc\x68\x64\xcb\x9c\x49\xb9\xf0\x1b\x7a\x3b\xee\x74\x32\x32\x46\x9e\x6e\xb4\x2a\xbe\x30\x43\xc9\xeb\xf9\x94\x59\xb1\x6b\xd1\x6b\xa4\x52\xcb\xb0\x14\xd5\xe5\xa2\x7e\xe7\xf1\xb9\x64\xc2\x24\x8a\xbe\xa3\x5e\xc0\x52\x56\x37\xf3\x05\xbc\x57\x4a\x20\x93\x00\xb6\x63\x64\x00\x01\x6f\xa7\x76\x0e\x5d\x2b\xf6\x3e\xf4\x0a\x32\xa8\xb1\xcc\x40\xd2\x02\xf7\xa0\x9e\xeb\xd6\xd7\x3f\x57\xcc\xc2\xc8\x44\x83\x68\x4d\xce\x44\x87\x72\x7a\x04\x3b\xb0\x61\x26\xb2\x3a\x13\xbe\xff\xa4\xd2\xf1\xc5\xae\xfa\xc0\x53\xab\xef\x8b\xf6\x87\x8f\xa1\xaf\xf3\x47\x85\x9a\x64\xce\xe1\x70\x80\x89\xd4\xbe\xac\x70\x28\xb1\x49\x40\x98\xb0\xa1\x40\x3b\xc0\xf7\x67\x34\x0c\xc6\x98\x87\x8d\x8f\xb3\xc1\xb8\xe4\x4a\x12\xe3\xd2\x2c\x85\x48\x82\xd2\xa3\x48\x66\x60\xa5\x84\xc0\xdc\x37\xe6\xcd\x79\xa8\x3b\xbf\xd1\xb5\x6a\x46\xf1\xed\xc8\x66\x5e\xdc\x10\x8c\x8e\xff\x49\x29\x8c\x48\x6d\xb2\xdf\x56\xf9\x97\x55\xbb\x23\xdb\xb6\x78\x94\xee\x85\xe0\xf4\x03\x3d\xb1\xa1\x7f\xd0\xa7\x4e\xa2\xfe\x37\xeb\x2c\x67\xba\x59\x7d\xb2\x31\xf2\x46\x4d\xc3\x72\x5a\x72\x63\x13\x38\xaa\xdc\x35\xbf\x6e\xf7\x2b\x00\x00\xff\xff\xbc\x48\xb9\x08\x3f\x09\x00\x00")

func resourcesKotlinConceptTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinConceptTemplate,
		"resources/kotlin.concept.template",
	)
}

func resourcesKotlinConceptTemplate() (*asset, error) {
	bytes, err := resourcesKotlinConceptTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.concept.template", size: 2367, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x6e\xdb\x38\x10\xbd\xfb\x2b\x06\x42\x0e\x32\x60\x10\x8b\x05\x76\x0f\x5e\x04\x1b\xc3\x41\x5b\xa7\x45\x5a\xc4\x06\x7a\x0c\x68\x6a\x22\x4f\x2a\x91\x02\x39\x72\xe3\xaa\xfc\xf7\x82\x94\xe4\xc8\xb1\x5c\xa0\x39\x84\x34\x35\xf3\xe6\xbd\xc7\x19\x56\x52\x7d\x93\x39\x42\xd3\x88\xfb\xb5\xf7\x93\x09\x95\x95\xb1\x0c\xca\x94\x82\x69\xab\x8c\xc8\xcc\x1e\x59\x52\x21\x94\xd1\x2c\x49\xa3\x15\xca\xd8\x4c\x8a\x65\xf8\xbf\x34\x65\x29\x75\x76\x2b\x59\x7e\x25\xde\x85\xf5\x4f\x21\xde\x15\xe6\xfb\xd2\x68\xb6\x52\x71\x9f\xab\x91\xbb\x10\x65\x2c\xc6\xbc\xf0\xd9\x89\x3e\xf0\xbf\x0b\x91\x6c\xa5\x76\x52\x31\x19\xed\xc4\x27\xcc\x72\xb4\x9b\xd7\xa3\x3e\xe9\x59\xee\xa5\x20\x23\x56\xba\xaa\x79\xcd\x16\x65\x79\x01\xcf\xa1\x25\x59\xd0\x0f\x19\xd2\x5b\xbe\xeb\xfe\x68\x5b\xe0\x09\x60\xcd\x54\x88\x65\x6d\x2d\x6a\x75\xb8\x80\x47\x19\x6a\x26\x3e\x88\xc5\xd6\x45\x21\x5f\xa4\xe5\xc3\x6f\x2d\xb3\x28\x6c\xad\x99\xca\xa0\x8e\xf2\x1c\xad\x58\x6d\xda\xcd\x64\x72\x73\x4e\xa9\xaa\xb7\x05\x29\x50\x85\x74\x2e\xdc\x6b\x6f\xd9\x32\x1c\x78\x0f\x73\x38\xb3\x3d\x9d\xce\xa0\xdf\x43\x33\x01\x80\x40\xa5\x92\x9a\x8c\x06\xb3\x7d\xc6\xe3\x71\xf8\xbb\xb9\xdb\x97\x6b\x96\x4c\xea\x78\xb4\x97\x05\x34\xcd\xd5\xdb\x5a\x8f\xcb\xcf\xf7\x9b\x87\xc5\x72\xf3\xb8\xba\x85\x6b\x48\x42\x48\x68\x33\x31\x12\x9b\x44\x30\x0f\x71\x69\x1a\x2b\x75\x8e\x70\xc5\x2f\x1a\xe6\xd7\x20\xba\x3e\x73\xe0\x7d\x0c\x18\xd1\x1d\x59\x77\xa2\x63\xa2\xb8\x97\x25\x82\xf7\xe9\x11\x8d\x66\x70\x25\x99\x6d\x80\x8c\x11\x0b\x66\x4b\xdb\x9a\xd1\x79\xdf\x34\xf4\x04\x3a\x44\xc1\x5f\xe1\x57\x32\x4b\xc2\x82\x3a\xf3\xbe\x17\x18\x92\x23\xac\xf7\xf3\x58\x26\xa2\xfd\x84\xf7\xc8\x1f\x0d\x17\xa4\x37\x87\x2a\x94\x0c\x0a\x62\xe2\xb4\xb7\x7b\x64\x50\xd2\xe9\xc0\x54\xd2\x34\xf4\xf8\xc4\x84\x8b\x94\x4f\xc2\xab\x9a\x23\x6a\x72\xca\x33\x99\xbd\x21\x3e\xed\xa8\x8d\x27\xab\x96\x67\x32\x8b\xb7\x15\x5d\xec\x2e\xac\x77\xd4\xfb\x64\x7a\xcc\x6d\x51\x7c\x77\x69\xaf\xb8\x66\x8f\xd6\x52\x86\xf0\x54\x6b\xc8\x91\x1f\xd0\x99\xda\x2a\xfc\x20\xdd\x2e\x9d\xce\x61\xcd\x96\x74\x3e\x10\x6c\x91\x6b\xab\x43\x51\x10\xa1\x35\x5b\x53\xc3\x6e\xbd\x93\x7f\xff\xf3\x2f\x1c\x3b\x64\x32\x5a\x60\x30\xe5\x77\xce\xe8\x50\x63\x30\xdd\xe7\x85\x78\x47\x4e\x84\xb1\x8d\xed\x27\x06\x14\x17\xae\xcd\x49\x93\x93\xc7\xe4\xd9\x19\xdd\x09\x1f\xa3\xb0\x47\x4b\x4f\x87\x94\x5f\xe6\x70\xf6\xec\x0c\xef\xb9\x8d\x1b\x7c\x4c\xf9\xe5\x04\x75\x44\x59\x9c\xf5\x54\xcb\x12\x7b\xe3\xa6\xf3\xfe\x09\xf8\xff\x5c\xda\xf9\xcc\xaf\xca\xaa\x10\x6f\xa0\xfa\xa2\xfe\x57\x00\x00\x00\xff\xff\xf9\x1e\xb0\x38\x03\x06\x00\x00")

func resourcesKotlinContractTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractTemplate,
		"resources/kotlin.contract.template",
	)
}

func resourcesKotlinContractTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contract.template", size: 1539, mode: os.FileMode(420), modTime: time.Unix(1562876304, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractimplTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\xc4\x30\x0c\x85\xf7\xfc\x0a\xdf\x4d\x77\x4b\x7e\x40\x25\x84\xaa\x4e\xb7\x30\x50\x36\xc4\xe0\x0b\x26\x4a\x69\xe2\xc8\x71\xbb\x54\xf9\xef\xa8\xa5\x95\x90\x60\x20\x53\x9e\xfc\x9e\xdf\xe7\x8c\xee\x13\x3d\xc1\xb2\xd8\xa7\xbe\x56\x63\x42\xcc\x2c\x0a\x8e\xa3\xd5\x70\x77\x6c\xdf\x79\x26\xc5\x30\x5a\xc7\x42\x56\xa6\xa4\x21\x92\x75\x1c\x73\x18\x49\x8a\x6d\x73\xee\x76\xf1\xdf\xb0\x4a\xf0\x9e\xc4\xde\x5e\xbe\x3f\xc6\xf0\x7d\x20\xa7\x2b\x45\xc7\x49\x05\x9d\x76\x23\x96\x52\xeb\x2d\xe6\x11\x16\x63\x00\x00\x66\x1c\xc1\xed\xe3\x3d\x59\xe0\x01\x7e\x00\x1c\x58\x6d\xce\x97\xbf\x77\x35\x8d\x5b\x85\x1d\x70\x46\xeb\x49\x9f\xa9\xf0\x24\x8e\xda\xd2\xab\x10\xc6\xcb\x59\x05\x53\x41\xa7\x81\x53\xb1\x43\xe1\x74\xbe\x5e\xb7\xfa\x8f\x29\x81\xa7\xa3\xf9\x92\x30\x52\x03\xbd\x4a\x48\xfe\xda\xc0\x71\xcb\x23\x2c\x9b\x7b\x7d\x42\x3a\x49\xfa\xc5\x7c\x3a\xbd\xae\xe1\xb7\xcd\x57\x4d\xfd\x0a\x00\x00\xff\xff\x96\xc1\x5f\xbb\x84\x01\x00\x00")

func resourcesKotlinContractimplTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractimplTemplate,
		"resources/kotlin.contractimpl.template",
	)
}

func resourcesKotlinContractimplTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractimplTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contractimpl.template", size: 388, mode: os.FileMode(420), modTime: time.Unix(1562861705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinPomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4b\x6f\x1b\x37\x10\x3e\x4b\xbf\x82\x35\x7c\xa9\x91\x25\x25\x39\x41\x03\x81\xdd\x4b\xd3\x43\x8a\xa4\x2d\xe2\x22\x28\xd0\x13\xc5\xa5\x56\x94\x77\xc9\x05\xc9\x95\x54\x18\xfe\xef\x05\x5f\xfb\x5e\xd9\x6d\x11\x5f\xb4\x9c\xf9\x66\xf8\x0d\xe7\x41\x1a\x57\x4a\x1e\x19\x35\xe0\x52\x16\x42\xff\x78\x73\x30\xa6\xda\x22\x54\x92\x13\x13\x90\x54\x84\x1e\x18\x94\x2a\x47\xbf\xff\xf6\x19\xbd\x85\x2b\xb8\xba\xf1\xc8\xed\x45\xf3\x06\x7d\x3e\x9f\xe1\xf9\xde\xe1\x36\xab\xd5\x1a\xfd\xf9\xf9\xd3\x03\x3d\xb0\x92\x24\x5c\x68\x43\x04\x65\x37\xe0\xa2\xf9\x56\x3b\xe1\x27\x49\x89\xe1\x52\xbc\x62\x33\x30\x87\xb8\xe8\xcc\x0b\x13\x87\x83\x17\x9d\xdd\xa4\x4b\x00\x70\x29\x33\x56\x7c\x65\x4a\x73\x29\x52\xa7\xc3\xa8\x27\xb3\xa0\x4a\xc9\x8a\x29\xc3\x99\xb6\x4b\x00\xf0\x8e\x68\xf6\x81\xab\x14\x19\x56\x56\x18\xc5\xe5\x72\xb1\xc0\xb9\x92\x75\xf5\x31\x4b\xc3\x2f\x46\x51\xb0\x04\x60\x81\x89\x32\x7c\x4f\xa8\xf9\x98\xa5\xed\x27\x46\x1d\xb1\x83\x9d\xc2\xe6\xe1\x17\xa3\x53\xcb\xc6\x92\x76\xe1\x51\x59\x56\xbc\x60\x0a\x1a\xa2\x72\x66\xd2\x35\x7c\x8f\xd1\xb4\x6a\xd2\x4c\xcb\x5a\x51\x36\x69\x16\x54\xde\xec\x51\x9a\x82\x0b\x18\x29\xac\xe1\x06\xfe\xb0\xc6\x68\x20\xb6\xb1\x07\x51\xe3\xa6\x20\x22\xaf\x49\xce\xbe\xb6\xa6\x8d\xdd\x2c\x68\xca\x11\xa9\xf8\x55\x1f\x1d\xfd\x94\xf9\xf1\x54\xfe\xd1\x39\xa3\x79\xf5\x12\xa3\x7e\xae\x9b\x74\xde\x3e\x85\xaf\xe7\x5e\x46\xbb\x09\xbd\x7d\x6a\x17\xcf\xc3\x9c\x36\x29\xbd\x7d\x0a\x5f\xcf\xbd\xac\xe2\x8c\x55\x4c\x64\x4c\x50\xb7\xf3\x62\xd1\x0a\xfe\xf6\x79\x70\xb9\x88\x5b\x4b\x95\xc3\x23\x33\x3b\x45\xb8\xd0\xd0\x07\xd4\x23\x16\xf0\x1d\x12\x1e\x94\x68\x93\x15\x7c\x97\x1c\xb3\xc7\xf7\x43\x8e\xc1\xa6\x65\xda\x4f\xf1\xf3\xb0\x0c\x51\x9f\xe2\x90\x72\xa7\x19\x04\x33\x90\x4a\x95\x91\x7e\x3b\xf4\xfa\xc1\xe9\x13\x2a\x15\x1b\xf5\x43\xdb\x10\x7f\xbd\x85\xab\x37\xdf\xf7\x88\x2c\xbe\x09\x8f\x3d\x17\x76\x0e\x5d\xa3\xb2\xb1\xd3\xe2\x7f\x90\xa1\xb2\x84\x86\xef\xa8\x84\x99\x3c\x31\x43\x78\x71\x85\x55\x84\x24\x81\xfe\x3c\xad\x15\x5c\xc3\xb7\x6f\xc0\x0b\xbc\xba\x15\x37\x45\xac\x22\x85\x2c\xb9\x90\x05\xd9\x69\x58\x32\xa3\x38\xd5\x57\xe8\x05\x44\x22\xd8\x39\x51\xac\xe0\xf4\x1a\xc3\x35\x5c\xc1\x77\x2f\x1d\x5c\x67\x1d\x7b\x51\xb1\x4a\x6a\x6e\xa4\x6a\x07\x71\x23\x6a\x9a\x04\x6b\x41\x2a\x7d\x90\x46\x77\x4a\x9a\x09\xb2\x2b\x58\x96\xee\x49\xa1\x19\x46\x71\x19\x4d\xd0\xc8\x06\xf3\x2c\xa5\x4c\x18\x45\x0a\x8c\x78\x8b\x14\xa4\x64\xe9\x4f\x5e\x01\xbe\x34\x9b\x63\xe4\x14\x11\x55\xab\x22\xb5\x37\x91\xde\x22\x64\x19\xc2\xd1\x7d\xe4\x04\x1b\x8c\x2c\x32\x34\x53\x3f\x94\xce\x3a\x86\xbf\xab\x79\x11\xee\x87\x8c\x2b\x46\x1d\xf4\xf6\x29\x5c\x3e\xcf\x18\xb5\x52\xef\xd2\x4f\xf1\x0f\x13\x58\xa4\x15\x45\x25\xe1\x02\xc5\xd1\x31\xc4\x7a\x0f\xb2\x36\x55\x6d\x26\x3d\xf8\x9b\x25\xd8\x23\x5a\x10\xad\x99\xc6\x68\x68\x11\xd3\xe4\xfd\xb7\xe7\x1b\x25\x9d\x24\x4d\x05\xd5\x12\x6d\x5c\x8c\xe2\xf4\x87\xd5\xbb\xb2\xd0\x60\x43\x6c\xdb\xb9\xf8\xd5\xe6\x28\x8c\xc1\xdb\xa7\xf0\x90\x81\x9d\xa1\xdd\x91\xb6\x33\xaf\x35\xf5\xae\xaa\xa2\xce\xb9\xd0\xbd\xd5\xcc\x84\x0e\x09\xf7\xd9\x0f\x76\x2f\x4c\x69\xff\x48\x39\x12\x95\x78\xfc\x0b\x33\x7a\x03\xef\xe1\x7a\x30\x97\x1d\x80\x4a\xb1\xe7\x79\xad\xdc\xcb\xa9\x95\xbf\x90\xd5\x99\xfc\xf9\x33\x9d\x70\x89\x51\x8c\x7f\xb1\x18\x1d\xc5\xcc\x05\xe4\x23\xbc\x16\xdd\x7f\xb9\xe9\xfe\xd5\xcd\xd5\xce\x85\x0b\xa3\xb5\x0d\x47\xf7\x15\x7d\xe5\x58\xd7\x8c\x08\xff\x84\xe8\x8e\x88\x01\x28\x97\xa4\xd0\xa9\xff\x6d\xe1\x6e\x05\xfc\xef\xd4\xd6\x68\x66\xef\x8e\xc2\x3d\x12\xec\xdf\x5c\xaa\xad\x4a\xc8\x33\x51\x22\x35\xaa\x66\x18\x85\x05\x00\xf8\xbb\x24\x01\x1f\xb8\xb6\x43\x10\x58\x19\x17\xb9\x06\x49\xd2\xb7\x25\x2a\x1f\x50\xf3\xc2\x34\x39\x92\x13\x49\x2a\xa2\x48\xc9\x0c\x53\xda\x26\x31\x4f\xbd\xd7\x9f\xdd\x64\x05\xda\xde\x06\x06\xd8\x87\x34\xd8\x4b\x05\x7e\x79\xf8\x92\xdc\xaf\xde\x01\x22\x84\x34\x8e\xe7\x78\x3f\xe4\x37\x5c\x84\xa8\xa6\xca\x0d\xf4\x4a\x2e\x0a\xbe\x4d\x0b\xea\x03\xc9\xd8\xeb\x9a\xf0\x1e\x6e\xa6\x9b\x70\xba\xbc\xe6\x0a\x0b\x57\x07\xa2\x59\x5a\x11\xfa\x48\x72\x86\x91\x5f\x2e\x27\xca\x69\x39\x51\x64\xa9\x23\x1c\x4a\x6b\x50\x34\x13\x56\xd7\x06\x44\x7b\x1a\x0f\xf1\x7f\x87\x8e\x8e\x0b\x5a\xd4\x19\x9b\x2a\xdb\xa0\xea\x3c\x96\xb7\x83\x47\x71\x44\xcc\xdb\x8e\x5f\x45\xdb\xbb\x59\xbb\x46\x31\x64\xd3\x66\x6c\x1c\x02\xde\xf3\xc2\xd6\xed\xc8\x99\x97\x4f\x70\x8b\xbe\x66\xc8\x35\xea\xa9\x19\x32\x77\x58\x8d\xce\x3a\x45\xce\x29\x8a\x4e\x6d\xed\x1b\xc2\x05\x53\xc8\x3d\xf7\xaa\x0a\xdd\xdd\xa1\x3b\xdb\xfd\x33\xc7\xd7\x73\xf7\x0a\x8b\x46\x31\x3e\x05\x34\x79\x0c\x51\x3c\x2c\xa3\xb9\x36\x9d\x19\x62\xfd\x01\x16\x65\xb1\x83\xe3\x97\x55\x61\x14\xde\x3b\xee\x5f\x32\x7b\x27\xa7\xff\x04\x00\x00\xff\xff\xe6\x0d\x20\x21\x7c\x10\x00\x00")

func resourcesKotlinPomXmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinPomXml,
		"resources/kotlin.pom.xml",
	)
}

func resourcesKotlinPomXml() (*asset, error) {
	bytes, err := resourcesKotlinPomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.pom.xml", size: 4220, mode: os.FileMode(420), modTime: time.Unix(1558641594, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinState1Template = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x6d\x6f\xdb\x36\x10\xfe\xae\x5f\x71\x11\x8a\x42\x42\x03\x61\xfb\xaa\xd5\x6d\x5c\xa3\x18\xb2\x05\x59\x01\xe7\x0f\x30\xf2\xd9\x65\x4a\x93\x2a\x79\x32\xe6\x31\xfc\xef\x03\xa9\x17\xeb\x35\xd8\xba\xee\x5b\xf5\x21\x91\xc9\xbb\xe7\x9e\xbb\x7b\xee\x54\xb2\xe2\x0b\x3b\x20\x58\x9b\xdd\x6f\x9d\x8b\x22\x7e\x2c\x95\x26\x90\x48\x59\xa1\xf4\x8e\xf9\xbf\x98\xf1\x1d\x4a\xe2\x74\xce\xd6\x8f\x86\x34\x2b\xe8\x13\xd3\x74\x6e\x8d\x9f\xd8\x89\x65\x15\x71\x91\x6d\x2a\xad\x51\x16\xe7\x05\x18\x83\x9a\x33\xc1\xff\x62\xc4\x95\xcc\x36\xfe\x62\xdb\x1e\x3d\x0a\x5c\xf0\x2a\x94\x0c\x31\x4d\xf6\x01\x85\x92\x07\xf3\xa0\x36\xcd\x51\xeb\x51\xa8\x63\xb6\x67\x86\x50\xff\x79\x14\xd9\x13\x2b\xbe\x18\x25\x33\x26\xa5\xa2\x3a\xd6\x6f\x46\xc9\xdb\x83\x54\x1a\x7f\x89\x22\x6b\x77\xb8\xe7\x12\x21\x56\x27\xd4\x9a\xef\x30\x76\xce\x5a\xbe\x07\xfc\x0a\xd9\x3d\x3b\x22\xc4\x82\x4b\x64\xfa\x76\x17\x3b\xd7\x1a\xc1\x89\x09\x6b\x51\x18\x74\xee\xc4\xb4\xb5\x28\x77\xde\x2f\xfc\xeb\x81\x96\x4c\xa3\xa4\x8d\x60\xc6\xb4\xb8\x99\x07\x0e\xf9\x86\x63\x88\x63\xe7\x16\xb3\x6c\x93\xdb\x12\x23\xac\x03\x42\xc3\xad\x0f\xb1\xe8\x7f\x17\xa8\x07\xef\x97\xc2\xf4\xcc\xba\x54\x9a\x30\xb7\x66\x5b\x7c\xc6\x5d\x25\x7c\x57\x80\x74\x85\xce\x5d\x2f\x02\xf5\x6c\x87\x68\x75\x61\x6e\xa6\x7d\xbe\x99\x34\x32\xb1\xb6\xcb\x3b\xe4\xe7\x5c\x9e\x17\xfe\x25\x8d\x3a\x5a\xa3\x02\x46\xe1\xde\x4b\xb7\xf1\x48\xac\xd5\x4c\x1e\x10\x5e\xf1\x6b\x78\xc5\x88\x34\xe4\x2b\xc8\xd6\x44\x9a\x3f\x56\x84\xa6\x49\x51\x7a\x0b\xf8\xc9\xff\x8a\xaf\xe3\x8e\x29\x9c\x98\x06\x6b\x83\x63\x50\x81\x73\x39\x58\x5b\x23\x3d\xc3\xaf\x48\xbf\x2b\x12\x5c\x3e\x9c\x4b\xbc\x14\xab\x36\xbf\x35\x7f\x94\x5e\x68\x4c\x34\xe5\x7a\x3f\xac\x42\x9a\xff\xc3\x76\x47\xff\xb9\xe1\xdf\xbb\x2c\xd6\x12\x1e\x4b\xc1\xa8\x3f\x2f\x35\x8e\x73\xdf\xbd\x5e\xd0\x16\xac\x9e\x9b\x4b\xfe\xce\x41\x1e\x92\xea\x9d\x74\x3e\x51\xfb\x06\x10\x01\x00\xf4\x47\x16\x4a\xa6\x89\x17\xbc\x64\x92\x0c\xe4\x70\xc7\x0d\xbd\x1d\xec\xb1\x77\xc1\xc7\x3f\x37\x97\x3d\xd1\x9d\x1d\x90\x92\xd4\x42\xf7\xdb\x3f\x13\xd8\x15\xac\xb5\x66\xe7\x19\xec\x24\x1d\x78\xfa\xfa\x40\x28\xce\xa7\x9e\xbf\x73\x03\x23\x8d\x54\x69\x39\x88\xd0\xdd\xbb\x68\x98\xe1\xbe\x92\x40\x6a\x4b\x9a\xcb\x43\x92\x42\x0e\xf5\xab\x8d\x7a\x64\x35\x3c\x19\x25\xf3\xfa\x06\x56\x10\xdb\x38\xea\x31\x6a\xd4\x31\xab\x8c\xbe\xdd\x42\x03\xf7\x2c\xac\xc4\x8b\xa5\x0f\x06\xab\xfa\xdf\x9b\x4e\x11\xf0\x0c\x0f\xaa\x56\x44\x43\xc4\x39\x78\x03\xf1\xf5\x80\x0b\x8e\xb0\xf8\x3e\x19\x4a\x0c\xae\x56\x20\x2b\x21\x02\x9d\x96\x4b\x28\xbe\x73\xf0\xfa\xf5\x48\x90\x57\x57\x19\x37\xf7\x8a\x3e\x1e\x4b\x3a\x27\x69\x27\xae\x41\xb9\xbf\x9d\x2f\x0c\xea\x33\x58\x7b\x73\xe8\xd9\x4e\xab\xf2\x8e\x19\x4a\x7e\x4e\x97\xca\x15\xbb\x1e\x7e\x23\x04\x7f\x15\x2d\x35\x1f\xbf\x56\x4c\x98\x44\xd1\x67\xd4\x39\xac\xe5\xf9\x7d\x9a\xc3\x07\xa5\x04\x32\x09\x60\x07\xa5\x0c\x46\xc0\xfb\xdb\x21\x05\x3b\x91\x36\x29\x58\x41\x6d\xcb\x0c\x24\x3d\xe3\x91\xa9\xc7\xfa\xe8\xe3\x5f\x22\xae\xc2\x40\x47\x13\x75\x2d\xee\x9e\xd1\x78\x74\x9f\xa0\xd1\x82\x18\x98\x4d\x55\xb1\xaa\x55\xe1\x15\x40\x2a\x9b\xbf\x1c\xb2\x0f\x38\x35\xfb\x31\x69\xff\x34\x5b\x38\xf9\x57\x81\x1a\x6d\xa6\xf0\xfc\x0c\x0b\xba\x7d\x99\xe1\x94\x62\x23\x81\x30\x64\x53\x82\x76\x62\x3f\x1e\xd3\x30\x1a\x73\x35\x6c\xea\x78\x35\x19\x18\xff\x61\x61\x5c\x9a\xb5\x10\x49\x60\xda\x92\x64\x06\x36\x4a\x08\x2c\x7c\x63\xde\xf6\xe6\x64\xb0\xea\xef\x55\x33\x8d\xef\x66\xb2\x79\x31\x23\x98\xdd\x00\x1d\x55\x98\xe1\xda\x88\xbf\x4f\xf3\x1b\xa3\x0e\x87\xb6\x5f\xe3\x59\xb8\x17\x94\x33\x56\xf4\x42\x42\xff\x43\xa3\x06\x92\xfa\xd1\xad\x1e\x9d\xe5\x6e\x8d\xc1\xe6\xc0\x1b\x36\x0d\xca\xe5\x53\x3c\x37\x83\xb3\xcc\x5d\xb3\xbd\x5d\xf4\x77\x00\x00\x00\xff\xff\x83\x94\x8b\x3d\x71\x0d\x00\x00")

func resourcesKotlinState1TemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinState1Template,
		"resources/kotlin.state.1.template",
	)
}

func resourcesKotlinState1Template() (*asset, error) {
	bytes, err := resourcesKotlinState1TemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.1.template", size: 3441, mode: os.FileMode(420), modTime: time.Unix(1562859435, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinStateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xdd\x72\xd3\x4a\x12\xbe\xd7\x53\x74\x54\x54\x56\x06\x97\x6a\xf7\xd6\x85\x09\x21\xc0\x56\xd8\x6c\xa0\x70\x6a\xf7\x72\x6b\x22\xb7\x9c\x09\xe3\x19\x31\xd3\x36\x78\x27\xf3\xee\xa7\x66\x24\x59\xff\x81\x93\xc3\xb9\x3b\xba\x20\xb2\x66\xba\xfb\xeb\x9f\xaf\xbb\x29\x58\xf6\x85\x6d\x10\xac\x4d\xaf\x57\xce\x45\x11\xdf\x16\x4a\x13\x48\xa4\x34\x53\x7a\xcd\xfc\xbf\x98\xf2\x35\x4a\xe2\x74\x48\xcf\x6f\x0d\x69\x96\xd1\x27\xa6\xe9\x50\x5f\xbe\x67\x7b\x96\xee\x88\x8b\xf4\x62\xa7\x35\xca\xec\x30\xa1\xc6\xa0\xe6\x4c\xf0\xff\x33\xe2\x4a\xa6\x17\xfe\x60\x55\x7f\xba\x15\x58\x4b\x65\x6a\x9b\xe6\xcc\x10\xea\xef\x5b\x91\xde\xb3\xec\x8b\x51\x32\x65\x52\x2a\x2a\x25\x3f\x18\x25\x2f\x37\x52\x69\x9c\x30\x94\x29\x19\x60\x9a\xf4\x79\x64\x2d\xcf\x01\xbf\x42\x7a\x69\x56\xd9\x1d\xae\x77\xc2\xdb\x02\xd2\x3b\x74\x6e\x42\xfe\x2d\x0a\x24\x7c\xaf\xf4\xdb\x0f\xff\xf9\xf7\xc4\x9d\x5c\xa8\x6f\x26\x7d\x2f\xd4\xb7\x2b\xb5\xe1\xd9\x67\xcc\xdf\xb3\x8c\x94\x3e\x44\xd6\xa2\x5c\x37\xba\xbd\x3b\xc4\x6f\x33\x95\xae\xd5\x1e\x89\x71\x11\xf0\x31\x2e\x51\x57\x0a\x9f\x47\x91\xb5\xcf\xb8\x2c\x76\x04\x8b\x25\xa4\xce\x45\xd6\xae\x31\xe7\x12\x21\x56\x7b\xd4\x9a\xaf\x31\x76\xee\xe8\xcb\x35\xdb\x22\xc4\x82\x4b\x64\xfa\x72\x1d\x3b\x57\x5f\x82\x3d\x13\xd6\xa2\x30\xe8\xdc\x9e\xe9\x0a\x4a\x8d\xa8\x51\x5a\x30\x8d\x92\x2e\x04\x33\xa6\xad\x37\xe4\x24\x7c\x85\x38\x76\xee\xa2\x8a\xe3\x8a\x18\x61\xa9\x16\x46\x6e\x4e\x46\xff\x2a\x00\x0c\xd2\xb1\x73\xad\x5f\x47\x5c\x8f\xe4\x66\xde\xfa\xd4\x15\x2a\x9d\x79\x3d\x2c\xa0\xd7\x6f\x50\x28\xb9\x31\x37\xaa\x46\x9e\x58\x9b\xd6\xef\x01\xad\x73\x8b\x45\xe6\x5f\x66\xd1\x94\xd7\x51\x38\xf7\x9c\xa8\x24\x12\x6b\x35\x93\x1b\x84\x67\x7c\x0e\xcf\x18\x91\x0e\x59\x3a\x27\xd2\xfc\x76\x47\x68\x2a\x4f\xa4\xbf\x01\x7f\xf7\xbf\xe2\x79\x7c\x44\x0a\x7b\xa6\xc1\xda\x20\x18\x32\xe7\xdc\x02\xac\x2d\x35\x3d\xc0\x3f\x91\xfe\xa5\x48\x70\x79\x73\x28\xb0\x89\x49\x79\xfd\xd2\x7c\x2c\x7c\xcd\x33\x51\x45\xe5\xac\x1b\x85\xd9\xc2\x5a\xc2\x6d\x21\x18\xf5\xb2\x0a\x65\x3d\x39\x67\xa3\x3f\x9c\xb9\x5f\x1d\x91\x36\xe6\x63\x79\x97\x7a\x9c\xfb\xe5\xa1\x82\x3a\x56\xe0\x75\xfd\x20\x5a\x60\x6b\xfe\x02\x40\x04\x00\xd0\xa6\x16\x14\x4c\x13\xcf\x78\xc1\x24\x19\x58\xc0\x15\x37\xf4\xb2\xd3\x14\x5f\x05\x19\xff\xbc\x6e\xb5\xa9\xfa\xdb\x06\x29\x99\x59\x38\xfe\xf6\xcf\x40\xed\x12\xce\xb5\x66\x87\x11\xdd\xc9\xac\x23\xe9\x03\x03\x21\x2a\x9f\x5a\xf2\xce\x75\x2e\x69\xa4\x9d\x96\x1d\x0b\xc7\xf3\xf2\xe6\xe3\x1d\x32\xb8\xd2\x69\x88\xbd\xb0\xe4\x3b\x09\x12\xbf\x53\x25\x8b\xeb\xf3\x8c\xf8\x9e\xd3\x21\xa1\x3b\x6e\x42\x09\x7d\xc6\x7c\x01\xf5\xdb\x1c\xf2\x61\xd3\x5c\xc0\x48\x27\x9d\x2d\x60\xa0\xf4\x0c\x6c\xd4\x8e\x1c\x69\xbe\x81\x25\x0c\x69\x7e\xb9\x2d\x44\xba\x41\xba\xd1\x7c\xb3\x41\x9d\xc4\xd6\xa6\x03\x6d\xce\xc5\x4d\x48\x79\x9e\x94\xda\x96\x20\x77\x42\xcc\x6c\x27\x8e\xab\x83\x21\xdc\xa6\x6a\x47\x69\xa1\xb9\x24\x21\x93\xd8\x3b\x02\xe3\x7a\x81\x1b\x90\x8a\x20\x57\x3b\xb9\x9e\xfb\xd7\x3b\x2e\x37\x60\xea\x9b\xf1\x6c\x2c\x4b\xde\x6e\x2f\x3b\xfe\x09\xf4\xb5\xbd\xaa\xd1\x90\x91\xd4\xb0\x84\x92\xd0\xf5\x48\x49\x9a\x71\x1c\xca\xc8\xa4\xcc\xf8\x52\x0a\xd9\x00\x66\xa0\xd3\xd4\x67\x73\x80\xb8\xe1\xf5\xff\x46\x13\xd9\xc3\xea\xcd\xa6\x6c\xbd\x3e\x9a\xfc\xa4\x55\x81\x9a\x0e\x49\x3c\x92\xc4\x78\x34\xdf\x3f\xad\xb1\xae\x9a\x78\x0e\xed\x72\xfa\x69\x79\xdf\x44\x4c\xc1\x32\x8c\xe7\xc1\x51\xbf\xe6\xf4\xfc\x19\xc6\x55\x6d\xb7\x4c\xae\x9b\xd0\x86\x9f\x6f\x19\xb1\xff\x72\xba\xf3\x7f\x7b\x44\xac\x04\xd2\x62\x47\xe1\x34\x26\xcd\xa4\x61\x99\x6f\x47\x97\xbe\xaf\x54\xe8\x7f\x20\x55\x7d\xa8\x90\x8e\x17\xeb\xa0\x75\xd0\x77\xb9\xda\x67\x35\xd6\x9b\xc6\xf0\x0a\xf5\x9e\x67\x98\xf8\x9a\x9a\xd7\xc6\xba\x08\x06\xcf\x40\xbb\xc6\x42\x1c\x60\x19\x68\x96\x72\xb9\x57\x5f\x30\xf1\xd1\x9e\x57\x76\xbb\xfa\x78\x9e\x54\x02\x25\x85\xe0\xe1\xa1\xd4\xe0\x89\xf8\xf1\xf6\x1e\xb3\xd2\xd3\xd9\x04\xc7\xe0\x09\x3c\x5b\x2b\x34\xf2\x6f\x04\x77\x6c\x8f\x0d\xbd\x00\xf7\x28\xe9\xc7\xbc\x83\x09\xee\xf9\xc7\x8d\xf1\xee\x29\x10\x1b\x54\x4c\x96\xc0\xa6\x51\x8c\x87\x8b\x99\xb3\x61\x2b\xec\x82\x6d\xb5\x8d\x08\x5a\xbd\xbd\x5c\x96\xa0\xdf\xb1\x49\xad\x48\x73\xb9\x49\xfc\x54\x2c\x5f\x5b\x8e\x7a\x16\xdc\x1b\x25\x17\xe5\x09\x2c\x21\xb6\x71\x73\x7c\x9c\xfe\xa3\x93\xbf\x7d\x6f\x62\x40\xe7\x2c\x6c\xa8\xcd\x4d\x6f\x0c\x96\xe5\x9f\x17\xc7\x89\x0f\x0f\x70\xa3\xca\x89\x5f\x01\x71\x0e\x5e\x40\x3c\xef\x60\xc1\x9e\x2e\x9e\x27\xdd\x15\x02\x4e\xca\x6a\x0b\x70\x6a\x2c\xa1\x39\x3a\x07\xa7\xa7\xbd\x85\xe3\xe4\x24\xe5\xe6\x5a\xd1\xbb\x6d\x41\x87\x64\x56\x2f\x0f\xdd\x32\x78\x3a\x5e\xe8\xc4\xa7\xb3\xd1\x8e\x69\x4f\xd7\x5a\x15\x57\xcc\x50\xf2\x8f\xd9\x54\xb8\x62\xd7\xd2\x5f\xd5\x91\x3f\x8a\x5a\xe5\xd0\x49\x3e\x7e\xdd\x31\x61\x12\x45\x77\xa8\x17\x70\x2e\x0f\x67\xb3\x05\xbc\x51\x4a\x20\x93\xd0\x2e\x78\x9e\x97\x97\xfc\x34\x6b\xa6\xc4\x6c\x30\x8b\x04\x90\x82\x25\x94\x77\x99\x81\xa4\x75\x79\xd0\x5e\xb9\x79\xe7\xed\x37\x16\x97\x61\xd7\x88\x06\xd5\x35\xb9\x5b\xf6\xb6\xa0\xe3\xfa\xd2\x5b\x00\xfb\xbd\xa9\x57\x15\x75\x93\x3a\x3d\x05\x52\xe9\xf8\xe1\x90\xa7\x15\xfa\x3e\x68\xa8\xc7\x34\xcf\x93\xdf\x65\xa8\xaa\xcd\x99\xef\x95\x13\x75\xfb\x38\xc2\xc9\x56\x12\x48\x36\x04\x38\xec\x67\x7d\x9a\x06\x6a\x8c\xc5\xb0\x8a\xe3\xc9\x80\x30\xd5\x7f\x68\xcd\xb9\x10\x49\x40\x5a\x83\x0c\xfb\x86\x10\x18\x26\xd2\xcb\x16\x4f\x3a\xab\xfc\xb5\xaa\xd8\xf8\x6a\xc4\x9b\x47\x3d\x82\xd1\x0e\x70\x84\x0a\x23\x58\xab\xe2\x6f\xc3\x7c\xa2\xd5\x2e\x69\xdb\x31\x1e\x55\xf7\x48\xe5\xf4\x2b\x7a\xc2\xa1\x3f\x21\x51\x9d\x92\xfa\x2b\x5b\x2d\x38\xd3\xd9\xea\x2b\x1b\x53\x5e\xa1\xa9\xb4\x34\xc3\x79\x8c\x83\xa3\xc8\x5d\xd5\xbd\x5d\xf4\x5b\x00\x00\x00\xff\xff\x66\xa2\x0b\x83\xa5\x13\x00\x00")

func resourcesKotlinStateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinStateTemplate,
		"resources/kotlin.state.template",
	)
}

func resourcesKotlinStateTemplate() (*asset, error) {
	bytes, err := resourcesKotlinStateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.template", size: 5029, mode: os.FileMode(420), modTime: time.Unix(1563550871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/kotlin.concept.template": resourcesKotlinConceptTemplate,
	"resources/kotlin.contract.template": resourcesKotlinContractTemplate,
	"resources/kotlin.contractimpl.template": resourcesKotlinContractimplTemplate,
	"resources/kotlin.pom.xml": resourcesKotlinPomXml,
	"resources/kotlin.state.1.template": resourcesKotlinState1Template,
	"resources/kotlin.state.template": resourcesKotlinStateTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"kotlin.concept.template": &bintree{resourcesKotlinConceptTemplate, map[string]*bintree{}},
		"kotlin.contract.template": &bintree{resourcesKotlinContractTemplate, map[string]*bintree{}},
		"kotlin.contractimpl.template": &bintree{resourcesKotlinContractimplTemplate, map[string]*bintree{}},
		"kotlin.pom.xml": &bintree{resourcesKotlinPomXml, map[string]*bintree{}},
		"kotlin.state.1.template": &bintree{resourcesKotlinState1Template, map[string]*bintree{}},
		"kotlin.state.template": &bintree{resourcesKotlinStateTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

