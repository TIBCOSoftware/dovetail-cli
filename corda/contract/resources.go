// Code generated by go-bindata.
// sources:
// resources/kotlin.concept.template
// resources/kotlin.contract.template
// resources/kotlin.pom.xml
// resources/kotlin.state.template
// DO NOT EDIT!

package contract

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesKotlinConceptTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\x6f\xd3\x30\x14\x7d\xcf\xaf\xb8\x8d\xa6\x29\xd5\xa6\x08\x5e\x2b\xc2\x28\x65\x42\x08\x54\x90\xb6\x3f\xe0\xa5\xb7\xc3\xc3\xb5\x33\xfb\xa6\x52\x70\xfd\xdf\x91\x9d\xb4\xcd\xe7\x04\x48\xbc\x91\x87\x7c\xf9\xe4\xdc\xe3\x73\xcf\x4d\xc1\xf2\x1f\xec\x11\xc1\xda\x74\x7d\xe7\x5c\x14\xf1\x5d\xa1\x34\x81\x44\x4a\x73\xa5\x37\xcc\x9f\x31\x35\xa8\x39\x13\xfc\x27\x23\xae\x64\xba\xf2\x0b\x77\xc7\x57\x0f\x02\x27\xbe\xe2\x1b\x94\xc4\xa9\x4a\x97\x0f\x86\x34\xcb\xe9\x1b\xd3\x54\x1d\xc1\x4f\x6c\xcf\xd2\x92\xb8\x48\x57\xa5\xd6\x28\xf3\x2a\x8a\xde\x0d\xa9\xad\xdd\xe0\x96\x4b\x84\x78\x49\xa4\x3f\x60\x2e\x62\x70\x6e\xcf\x34\x58\x0b\xe9\x9a\xed\x10\x9c\x5b\xf8\x87\x8b\x03\x7c\x44\xfa\xac\x48\x70\x79\x5f\x15\xe8\x9c\xb5\x7c\x0b\xf8\x0c\xe9\x27\xf3\xb5\xf0\xd2\x99\x00\xd2\x25\x3a\x77\x63\x2d\xca\x8d\x47\x84\x4b\xa4\x0a\x94\x90\x0b\x66\x8c\xb7\x62\xe5\x6f\x9c\x4b\xac\xd5\x4c\x3e\x22\x5c\xf0\x6b\xb8\x60\x44\x1a\x16\x19\xa4\x5e\x07\x7f\x28\x09\x4d\x53\x41\x7a\x04\xbc\xf2\x4f\xf1\x75\x7c\x22\xb5\x96\x70\x57\x08\x46\x1d\xed\x81\xe7\x84\x99\x83\x8d\x00\x00\xc2\x49\xed\x51\x6b\xbe\x41\xd8\x96\x12\x48\xdd\x91\xe6\xf2\x31\x99\xc3\x02\xea\xdb\x1a\x1a\x0e\xbf\xff\x27\xa3\xe4\xa2\x5e\x81\x0c\x62\x1b\x9f\x97\x4f\xc2\x47\x45\xb7\x71\xb5\x41\x01\xd7\x76\x69\xcb\x84\xc1\x36\xd2\x17\x83\xac\xbe\x5c\x05\xb7\xfd\x27\x07\xb8\x57\xb5\xe1\x8d\x0e\xe7\xe0\x0a\xe2\xeb\x8e\x14\xec\x51\xf1\x6d\x62\x6d\x5d\xd1\xb7\xcf\x39\x98\x65\x20\x4b\x21\x82\x9a\xa3\x94\xa5\xd6\xac\x72\x0e\x2e\x2f\xa1\x8b\x9e\xcd\x52\x6e\xd6\x8a\x6e\x77\x05\x55\xc9\xfc\x68\x64\xcb\x9c\x49\xb9\xf0\x1b\x7a\x3b\xee\x74\x32\x32\x46\x9e\x6e\xb4\x2a\xbe\x30\x43\xc9\xeb\xf9\x94\x59\xb1\x6b\xd1\x6b\xa4\x52\xcb\xb0\x14\xd5\xe5\xa2\x7e\xe7\xf1\xb9\x64\xc2\x24\x8a\xbe\xa3\x5e\xc0\x52\x56\x37\xf3\x05\xbc\x57\x4a\x20\x93\x00\xb6\x63\x64\x00\x01\x6f\xa7\x76\x0e\x5d\x2b\xf6\x3e\xf4\x0a\x32\xa8\xb1\xcc\x40\xd2\x02\xf7\xa0\x9e\xeb\xd6\xd7\x3f\x57\xcc\xc2\xc8\x44\x83\x68\x4d\xce\x44\x87\x72\x7a\x04\x3b\xb0\x61\x26\xb2\x3a\x13\xbe\xff\xa4\xd2\xf1\xc5\xae\xfa\xc0\x53\xab\xef\x8b\xf6\x87\x8f\xa1\xaf\xf3\x47\x85\x9a\x64\xce\xe1\x70\x80\x89\xd4\xbe\xac\x70\x28\xb1\x49\x40\x98\xb0\xa1\x40\x3b\xc0\xf7\x67\x34\x0c\xc6\x98\x87\x8d\x8f\xb3\xc1\xb8\xe4\x4a\x12\xe3\xd2\x2c\x85\x48\x82\xd2\xa3\x48\x66\x60\xa5\x84\xc0\xdc\x37\xe6\xcd\x79\xa8\x3b\xbf\xd1\xb5\x6a\x46\xf1\xed\xc8\x66\x5e\xdc\x10\x8c\x8e\xff\x49\x29\x8c\x48\x6d\xb2\xdf\x56\xf9\x97\x55\xbb\x23\xdb\xb6\x78\x94\xee\x85\xe0\xf4\x03\x3d\xb1\xa1\x7f\xd0\xa7\x4e\xa2\xfe\x37\xeb\x2c\x67\xba\x59\x7d\xb2\x31\xf2\x46\x4d\xc3\x72\x5a\x72\x63\x13\x38\xaa\xdc\x35\xbf\x6e\xf7\x2b\x00\x00\xff\xff\xbc\x48\xb9\x08\x3f\x09\x00\x00")

func resourcesKotlinConceptTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinConceptTemplate,
		"resources/kotlin.concept.template",
	)
}

func resourcesKotlinConceptTemplate() (*asset, error) {
	bytes, err := resourcesKotlinConceptTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.concept.template", size: 2367, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4f\x6b\xdb\x4e\x10\xbd\xfb\x53\x0c\x22\x07\x19\xcc\xf2\xe3\x07\xed\xc1\x25\x10\xa3\xd0\x36\x69\x49\x4b\x6c\xe8\x31\x8c\x57\x1b\x7b\x52\x69\x57\xec\x8e\x5c\xbb\xea\x7e\xf7\xb2\x2b\xc9\x91\x63\xf9\x50\x1f\x2c\x69\xf4\xde\x9b\x37\x7f\x56\x15\xca\x9f\xb8\x51\xd0\x34\xe2\x61\xe9\xfd\x64\x42\x65\x65\x2c\x83\x34\xa5\x60\x5a\x4b\x23\x72\xb3\x53\x8c\x54\x08\x69\x34\x23\x69\x65\x85\x34\x36\x47\x91\x85\xff\xcc\x94\x25\xea\xfc\x16\x19\x7f\x10\x6f\xc3\xf5\x5f\x25\x3e\x16\xe6\x57\x66\x34\x5b\x94\xdc\x73\xb5\xe2\x0e\x22\x8d\x55\x91\x17\x5e\x3b\xd1\x03\x3f\x5c\x40\xb2\x45\xed\x50\x32\x19\xed\xc4\x57\x95\x6f\x94\x5d\xbd\x86\x7a\xd2\x0b\xee\x50\x90\x11\x77\xba\xaa\x79\xc9\x56\x61\x79\x41\xcf\x29\x4b\x58\xd0\x6f\x0c\xf4\xd6\xef\xb2\x0f\xad\x0b\x75\x22\x58\x33\x15\x22\xab\xad\x55\x5a\x1e\x2e\xe8\x51\xae\x34\x13\x1f\xc4\x62\xed\x62\x21\xdf\xd1\xf2\x61\x32\xb9\x39\x97\xae\xea\x75\x41\x12\x64\x81\xce\x85\xf9\xf4\xa5\x67\x21\xe0\x3d\xcc\xe1\xac\x7d\xe9\x74\x06\xfd\x3d\x34\x13\x00\x08\x53\xa8\x50\x93\xd1\x60\xd6\x2f\xea\x18\x0e\xbf\x9b\xfb\x5d\xb9\x64\x64\x92\xc7\xd0\x0e\x0b\x68\x9a\xab\xb7\xb9\x9e\xb2\x6f\x0f\xab\xc7\x45\xb6\x7a\xba\xbb\x85\x6b\x48\x02\x24\xac\x8b\x18\xc1\xf6\x8f\x49\x14\xf5\x10\x2f\x4d\x63\x51\x6f\x14\x5c\xf1\x5e\xc3\xfc\x1a\x44\xb7\x37\x0e\xbc\x8f\x80\x91\xfa\xa3\xfb\xae\xf8\x48\x14\x0f\x58\x2a\xf0\x3e\x3d\xaa\xd1\x0c\xae\x90\xd9\x06\xc9\x88\x58\x30\x5b\x5a\xd7\xac\x9c\xf7\x4d\x43\xcf\xa0\x03\x0a\xfe\x0b\x4f\xc9\x2c\x09\x17\xa5\x73\xef\xfb\x42\x03\x39\xca\x7a\x3f\x8f\x69\xa2\xda\x1f\xf8\xa4\xf8\x8b\xe1\x82\xf4\xea\x50\x85\x94\xa1\x82\x48\x9c\xf6\x6d\x1f\x59\xfc\x74\x3a\x68\x2e\x69\x1a\xf6\xfa\xa4\x09\x17\x2d\x9f\xc0\xab\x9a\xa3\x6a\x72\xea\x33\x99\xbd\x31\x3e\xed\xac\x8d\x93\x65\xeb\x33\x99\xc5\xa9\xc5\x2e\x76\x83\xeb\x3b\xea\x7d\x32\x3d\x72\x5b\x15\xdf\x0d\xed\x55\xd7\xec\x94\xb5\x94\x2b\x78\xae\x35\x6c\x14\x3f\x2a\x67\x6a\x2b\xd5\x67\x74\xdb\x74\x3a\x87\x25\x5b\xd2\x9b\x41\xc1\x56\x71\x6d\x75\x48\x0a\x22\xac\x68\xdb\xd4\x70\xb7\xdc\xe2\xff\xef\xde\x83\xf7\xdd\x86\x4c\x46\x13\x0c\x4e\xed\xbd\x33\x3a\xe4\x18\x9c\xd6\xf3\x44\xbc\x25\x27\xc2\x31\x8c\x6b\x28\x06\x16\x17\xae\xe5\xa4\xc9\xc9\xc7\xe1\xc5\x19\xdd\x15\x3e\x66\x61\xa7\x2c\x3d\x1f\x52\xde\xcf\xe1\xec\x33\x32\x9c\x73\x8b\x1b\xbc\x4c\x79\xdf\xab\xfa\xbf\x01\x00\x00\xff\xff\x99\xbc\x1a\xcc\x5e\x05\x00\x00")

func resourcesKotlinContractTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractTemplate,
		"resources/kotlin.contract.template",
	)
}

func resourcesKotlinContractTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contract.template", size: 1374, mode: os.FileMode(420), modTime: time.Unix(1554429417, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinPomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\xcd\x8e\xdb\x36\x10\x3e\xdb\x4f\xc1\x2e\xf6\xd2\x22\x22\x6d\xef\x06\x0d\x0c\x56\x97\x6e\x0f\x29\x92\xb6\xc8\x16\x41\x81\x9e\x68\x6a\x56\xa6\x57\x22\x05\x92\xb2\x5d\x18\x7e\xf7\x82\x22\xf5\x6b\xc9\x4e\x1b\x64\x2f\x16\x67\xbe\x21\xbf\xe1\xfc\x71\x69\xa1\xd5\x0e\xb8\x45\xc7\x3c\x93\xe6\xa7\xbb\xad\xb5\xc5\x9a\x90\x9c\xed\x41\x62\x56\x30\xbe\x05\xac\x74\x4a\xfe\xf8\xfd\x23\x79\xc4\x0b\xbc\xb8\xf3\xc8\xf5\xd1\x88\x06\x7d\x38\x1c\xf0\xe1\xa1\xc2\xad\x16\x8b\x25\xf9\xeb\xe3\x87\x67\xbe\x85\x9c\x45\x42\x1a\xcb\x24\x87\x3b\x74\x34\x62\x6d\x2a\xe1\x07\xc5\x99\x15\x4a\x7e\xc1\x61\x68\x0a\x71\x34\x89\x17\x46\x15\x0e\x1f\x4d\x72\x17\xcf\x11\xa2\xb9\x4a\x20\xfb\x0c\xda\x08\x25\xe3\x4a\x47\x49\x4f\xe6\x40\x85\x56\x05\x68\x2b\xc0\xb8\x25\x42\x74\xc3\x0c\x3c\x09\x1d\x13\x0b\x79\x41\x49\xbd\x9c\xcf\x66\x34\xd5\xaa\x2c\xde\x27\x71\xf8\xa5\xa4\x16\xcc\x11\x9a\x51\xa6\xad\x78\x61\xdc\xbe\x4f\xe2\xf6\x93\x92\x8e\xb8\x82\xed\xc3\xe1\xe1\x97\x92\x7d\xcb\xc6\x91\xae\xdc\xe3\x2a\x2f\x44\x06\x1a\x5b\xa6\x53\xb0\xf1\x12\xbf\xa3\x64\x5c\x35\x6a\x66\x54\xa9\x39\x8c\x9a\x05\x95\x37\x7b\x55\x36\x13\x12\xd7\x14\x96\x78\x85\x7f\x5c\x52\x32\x10\x3b\xdf\x83\xa8\xd9\x26\x63\x32\x2d\x59\x0a\x9f\x5b\xd3\xc6\x6e\x12\x34\xb6\x11\x2b\xc4\xd5\x3d\x3a\xfa\x31\xf3\xdd\x3e\xff\xb3\x73\x47\xd3\xea\x39\x25\xfd\x58\x37\xe1\xbc\x3f\x85\xaf\x73\x2f\xa2\xdd\x80\xde\x9f\xda\xc5\x79\x18\xd3\x26\xa4\xf7\xa7\xf0\x75\xee\x45\x95\x26\x50\x80\x4c\x40\xf2\xea\xe4\xd9\xac\x15\xfc\xe3\xe3\x50\xc5\xa2\x3e\x5a\xe9\x14\xef\xc0\x6e\x34\x13\xd2\x60\xef\x50\x8f\x58\xc0\x77\x48\x78\x50\x64\x6c\x92\x89\x4d\xb4\x4b\x5e\xdf\x0d\x39\x06\x9b\x96\x69\x3f\xc4\xe7\x61\x1a\x92\x3e\xc5\x21\xe5\x4e\x31\x48\xb0\x98\x2b\x9d\xb0\x7e\x39\xf4\xea\xa1\xd2\x47\x5c\x69\xb8\xa8\x87\xb6\x20\xfe\x7e\xc4\x8b\x37\xdf\xf7\x88\xcc\xbe\x09\x8f\x17\x21\x5d\x1f\xba\x46\x65\xe5\xba\xc5\x57\x90\xe1\x2a\xc7\x56\x6c\xb8\xc2\x89\xda\x83\x65\x22\xbb\xc2\xaa\x86\x44\x81\xfe\x34\xad\x05\x5e\xe2\xc7\x37\xe8\x06\xaf\x6e\xc6\x8d\x11\x2b\x58\xa6\x72\x21\x55\xc6\x36\x06\xe7\x60\xb5\xe0\xe6\x0a\xbd\x80\x88\x24\x1c\x22\x0d\x99\xe0\xd7\x18\x2e\xf1\x02\xbf\xbd\x75\x71\x9d\x75\x5d\x8b\x1a\x0a\x65\x84\x55\xba\x6d\xc4\x8d\xa8\x29\x12\x6a\x24\x2b\xcc\x56\x59\xd3\x49\x69\x90\x6c\x93\x41\x12\xbf\xb0\xcc\x00\x25\xf5\xb2\x36\x21\x17\x36\x54\x24\x31\x07\x69\x35\xcb\x28\x11\x2d\x52\xb2\x1c\xe2\x9f\xbd\x02\x7d\x6a\x0e\xa7\xa4\x52\xd4\xa8\x52\x67\xb1\x9b\x44\x66\x4d\x88\x63\x88\x2f\xe6\x51\x25\x58\x51\xe2\x90\xa1\x98\xfa\xae\x74\xd6\xb5\xfb\x9b\x52\x64\x61\x3e\x24\x42\x03\xaf\xa0\xf7\xa7\x30\x7c\xce\x94\xb4\x52\xbf\xa5\xef\xe2\x4f\x23\x58\x62\x34\x27\x39\x13\x92\xd4\xad\x63\x88\xf5\x3b\xa8\xd2\x16\xa5\x1d\xdd\xc1\x4f\x96\x60\x4f\x78\xc6\x8c\x01\x43\xc9\xd0\xa2\x0e\x93\xdf\xbf\xbd\xdf\x5a\xd2\x09\xd2\x98\x53\x2d\xd1\x66\x8b\x0b\x3f\xfd\x65\xf5\x46\x16\x19\x1c\x48\x5d\x39\x67\xbf\xb9\x18\x85\x36\x78\x7f\x0a\x0f\x19\xdc\x69\xda\x1d\x69\xdb\xf3\x5a\x53\xbf\x55\x91\x95\xa9\x90\xa6\xb7\x9a\xe8\xd0\x21\xe0\x3e\xfa\xc1\xee\x46\x97\xf6\x8f\x94\x1d\xd3\x91\xc7\xdf\xe8\xd1\x2b\xfc\x80\x97\x83\xbe\x5c\x01\xb8\x92\x2f\x22\x2d\x75\xf5\x72\x6a\xe5\x37\xa2\x3a\x11\x3f\x7f\xa7\x23\x5b\x52\x52\xfb\x3f\x9b\x5d\x5c\xc5\xc4\x00\xf2\x1e\x5e\xf3\xee\xff\x4c\xba\xff\x34\xb9\xda\xbe\x70\x04\x5e\x3a\x77\x4c\x5f\xd1\x57\x5e\xea\x9a\x16\xe1\x9f\x10\xdd\x16\x31\x00\xa5\x8a\x65\x26\xf6\xbf\x2d\xbc\x5a\x21\xff\x3b\x76\x34\x99\x38\xbb\xa3\xa8\x1e\x09\xee\x6f\x2a\xd4\x4e\x25\xd5\x81\x69\x19\x5b\x5d\x02\x25\x61\x81\x10\xfd\x2e\x8a\xd0\x93\x30\xae\x09\x22\x27\x13\x32\x35\x28\x8a\xfa\xb6\x4c\xa7\x03\x6a\x5e\x18\x47\x3b\xb6\x67\x51\xc1\x34\xcb\xc1\x82\x36\x2e\x88\x69\xec\x77\xfd\xa5\xea\xac\xc8\xb8\x69\x60\x91\x7b\x48\xa3\x17\xa5\xd1\xaf\xcf\x9f\xa2\x87\xc5\x5b\xc4\xa4\x54\xb6\xe2\x79\x79\x1e\xf1\x07\xce\x82\x57\x63\xe9\x86\x7a\x29\x57\x0b\xbe\x4d\x09\x9a\x2d\x4b\xe0\xcb\x8a\xf0\x01\xaf\xc6\x8b\x70\x3c\xbd\xa6\x12\x8b\x16\x5b\x66\x20\x2e\x18\x7f\x65\x29\x50\xe2\x97\xf3\x91\x74\x9a\x8f\x24\x59\x5c\x11\x0e\xa9\x35\x48\x9a\x11\xab\x6b\x0d\xa2\xbd\x8d\xe7\xfa\x7f\x87\x8e\x4e\x48\x9e\x95\x09\x8c\xa5\x6d\x50\x75\x1e\xcb\xeb\xc1\xa3\xb8\x46\x4c\xdb\x5e\xbe\x8a\xd6\x3f\x4c\xda\x35\x8a\x21\x9b\x36\x62\x97\x2e\x0c\x2e\x67\xf2\x22\x46\xab\xb0\x5f\x81\xb5\xac\x4e\xc1\xfa\xcb\xa9\x28\x09\x03\xbb\xfa\x9f\xc2\x0d\x95\xf8\xdf\x00\x00\x00\xff\xff\x70\x08\xdb\x9b\x3d\x0f\x00\x00")

func resourcesKotlinPomXmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinPomXml,
		"resources/kotlin.pom.xml",
	)
}

func resourcesKotlinPomXml() (*asset, error) {
	bytes, err := resourcesKotlinPomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.pom.xml", size: 3901, mode: os.FileMode(420), modTime: time.Unix(1554834482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinStateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\xb8\x08\x45\x21\xa1\x81\xb0\xbd\x6a\x75\x1b\xd7\x28\x86\x6c\x41\x56\x20\xf9\x02\x8c\x7c\xf6\x98\xd2\xa4\x4b\x9e\x8d\x79\x0c\xbf\xfb\x40\x8a\x92\x45\x4b\x0a\xb0\xa2\x7b\x9b\x1e\x6c\x99\xbc\x3f\xbf\xfb\xdd\xef\xce\x7b\xd6\x7c\x65\x5b\x04\x6b\xab\xfb\x07\xe7\xb2\x8c\xef\xf6\x4a\x13\x48\xa4\xaa\x51\x7a\xcd\xfc\x27\x56\x7c\x8d\x92\x38\x9d\xaa\xe5\x93\x21\xcd\x1a\xfa\xc2\x34\x9d\x3a\xe3\x67\x76\x64\xd5\x81\xb8\xa8\x56\x07\xad\x51\x36\xa7\x99\x30\x06\x35\x67\x82\xff\xcd\x88\x2b\x59\xad\xfc\xc5\x43\x77\xf4\x24\x70\xc6\xab\x51\x32\xe4\x34\xd5\x27\x14\x4a\x6e\xcd\xa3\x5a\xc5\xa3\xce\xa3\x51\xbb\x6a\xc3\x0c\xa1\xfe\x6b\x27\xaa\x67\xd6\x7c\x35\x4a\x56\x4c\x4a\x45\x6d\xae\xdf\x8c\x92\xb7\x5b\xa9\x34\xfe\x92\x65\xd6\xae\x71\xc3\x25\x42\xae\x8e\xa8\x35\x5f\x63\xee\x9c\xb5\x7c\x03\xf8\x0d\xaa\x7b\xb6\x43\xc8\x05\x97\xc8\xf4\xed\x3a\x77\xae\x33\x82\x23\x13\xd6\xa2\x30\xe8\xdc\x91\x69\x6b\x51\xae\xbd\x5f\xf8\xca\x7a\xff\x50\xd6\x4a\x30\x63\x20\xcf\x9d\xcb\x6e\xc6\x75\x36\xe1\xd6\xda\x2a\x98\x39\x57\x58\xab\x99\xdc\x22\xbc\xe1\xd7\xf0\x86\x11\x69\xa8\x17\x50\x2d\x89\x34\x7f\x3a\x10\x9a\x08\x4f\x7a\x0b\xf8\xc9\xff\xca\xaf\xf3\x3e\x37\x1c\x99\x06\x6b\x83\x63\x80\xef\x5c\x0d\xd6\xb6\x91\x5e\xe0\x57\xa4\xdf\x15\x09\x2e\x1f\x4f\x7b\x3c\x17\xda\x9a\xdf\x9a\x3f\xf6\x9e\x21\x26\x80\xf4\x01\x9d\xfb\x98\xd6\x55\xd6\xb3\xdd\xe8\x9a\xf0\x40\x8c\xd0\x66\x2d\x35\x30\xc1\xc2\x6c\x84\xbb\x40\x72\xf0\x9f\x61\xea\x66\xd4\xf2\xc2\xd3\x16\xdf\x23\x7d\x75\x1d\x08\x2d\x7f\x34\xaf\xd6\x12\xee\xf6\x82\xd1\x50\x29\x6d\x1c\xe7\x7e\x38\xe1\xd0\x31\x1e\xec\x07\x04\x3a\x07\x75\x28\x6a\x70\xd2\xfb\x64\xdd\x1b\x40\x06\x00\x30\x14\x2b\xec\x99\x26\xde\xf0\x3d\x93\x64\xa0\x86\x3b\x6e\xe8\x7d\x32\xc1\x1f\x82\x8f\x7f\x6e\xce\x13\xd2\x9f\x6d\x91\x8a\xd2\x42\xff\xdb\x3f\xa3\xb0\x0b\x58\x6a\xcd\x4e\x13\xb1\x8b\x32\xf1\xf4\xfc\x40\x20\xe7\xcb\xc0\xdf\xb9\xc4\x48\x23\x1d\xb4\x4c\x32\xf4\xf7\x2e\x4b\x2b\xdc\x1c\x24\x90\x7a\x20\xcd\xe5\xb6\x28\xa1\x86\xf6\xd5\x66\x03\xb0\x1a\x9e\x8d\x92\x75\x7b\x03\x0b\xc8\x6d\x9e\x0d\x10\x45\x75\x4c\x2a\x63\x68\x37\xd3\xc0\x0d\x0b\xcb\xe0\x6c\xe9\x93\xc1\xa2\xfd\x7a\xd7\x2b\x02\x5e\xe0\x51\xb5\x8a\x88\x40\x9c\x83\x77\x90\x5f\x27\x58\xf0\x22\x16\xdf\x14\xa9\xc4\xe0\x6a\x01\xf2\x20\x44\x80\xd3\x61\x09\xe4\x3b\x07\x6f\xdf\x5e\x08\xf2\xea\xaa\xe2\xe6\x5e\xd1\xe7\xdd\x9e\x4e\x45\xd9\x8b\x2b\xa1\xfb\xfb\xf1\x42\xc2\x4f\xb2\x09\xa7\xa2\x57\x6b\xad\xf6\x77\xcc\x50\xf1\x73\x39\x47\x57\xee\x06\xf1\xa3\x10\xfc\x55\x36\xd7\x7c\xfc\x76\x60\xc2\x14\x8a\xfe\x44\x5d\xc3\x52\x9e\x3e\x96\x35\x7c\x52\x4a\x20\x93\x00\x36\xa1\x32\x18\x01\x1f\x6e\x87\x12\xec\x48\xda\xa4\x60\x01\xad\x2d\x33\x50\x0c\x8c\x2f\x4c\x7d\xac\xcf\x3e\xff\x39\xe3\x22\x0c\x74\x36\x52\xd7\xec\xee\xb9\x18\x8f\xb8\x39\x47\x0b\x22\x31\x1b\xab\x62\xd1\xaa\xc2\x2b\x80\x54\x35\x7d\x99\xa2\x0f\x71\x5a\xf4\x97\xa0\xfd\x13\xd7\x78\xf1\xaf\x12\x45\x6d\x96\xf0\xf2\x02\x33\xba\x7d\x1d\xe1\x18\x62\x94\x40\x18\xb2\x31\x40\x3b\xb2\xbf\x1c\xd3\x30\x1a\x53\x1c\x46\x1e\xaf\x46\x03\xe3\xff\x99\x18\x97\x66\x29\x44\x11\x90\x76\x20\x99\x81\x95\x12\x02\x1b\xdf\x98\xf7\x83\x39\x49\x56\xfd\xbd\x8a\xd3\xf8\x61\xa2\x9a\x57\x2b\x82\xc9\x0d\xd0\x43\x85\x09\xac\x51\xfc\x43\x98\xdf\x99\x35\x1d\xda\x21\xc7\x93\xe1\x5e\x51\xce\xa5\xa2\x67\x0a\xfa\x0f\x1a\x95\x48\xea\xff\x6e\x0d\xe0\xcc\x77\xeb\x32\xd8\x54\xf0\x88\x26\x46\x39\xff\x15\x4f\xcd\xe0\x24\x72\x17\xb7\xb7\xcb\xfe\x09\x00\x00\xff\xff\x22\x8b\x5c\x39\x6b\x0c\x00\x00")

func resourcesKotlinStateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinStateTemplate,
		"resources/kotlin.state.template",
	)
}

func resourcesKotlinStateTemplate() (*asset, error) {
	bytes, err := resourcesKotlinStateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.template", size: 3179, mode: os.FileMode(420), modTime: time.Unix(1554430209, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/kotlin.concept.template": resourcesKotlinConceptTemplate,
	"resources/kotlin.contract.template": resourcesKotlinContractTemplate,
	"resources/kotlin.pom.xml": resourcesKotlinPomXml,
	"resources/kotlin.state.template": resourcesKotlinStateTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"kotlin.concept.template": &bintree{resourcesKotlinConceptTemplate, map[string]*bintree{}},
		"kotlin.contract.template": &bintree{resourcesKotlinContractTemplate, map[string]*bintree{}},
		"kotlin.pom.xml": &bintree{resourcesKotlinPomXml, map[string]*bintree{}},
		"kotlin.state.template": &bintree{resourcesKotlinStateTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

