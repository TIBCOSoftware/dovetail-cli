// Code generated by go-bindata.
// sources:
// resources/kotlin.concept.template
// resources/kotlin.contract.template
// resources/kotlin.pom.xml
// resources/kotlin.state.template
// DO NOT EDIT!

package contract

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesKotlinConceptTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\x6f\xd3\x30\x14\x7d\xcf\xaf\xb8\x8d\xa6\x29\xd5\xa6\x08\x5e\x2b\xc2\x28\x65\x42\x08\x54\x90\xb6\x3f\xe0\xa5\xb7\xc3\xc3\xb5\x33\xfb\xa6\x52\x70\xfd\xdf\x91\x9d\xb4\xcd\xe7\x04\x48\xbc\x91\x87\x7c\xf9\xe4\xdc\xe3\x73\xcf\x4d\xc1\xf2\x1f\xec\x11\xc1\xda\x74\x7d\xe7\x5c\x14\xf1\x5d\xa1\x34\x81\x44\x4a\x73\xa5\x37\xcc\x9f\x31\x35\xa8\x39\x13\xfc\x27\x23\xae\x64\xba\xf2\x0b\x77\xc7\x57\x0f\x02\x27\xbe\xe2\x1b\x94\xc4\xa9\x4a\x97\x0f\x86\x34\xcb\xe9\x1b\xd3\x54\x1d\xc1\x4f\x6c\xcf\xd2\x92\xb8\x48\x57\xa5\xd6\x28\xf3\x2a\x8a\xde\x0d\xa9\xad\xdd\xe0\x96\x4b\x84\x78\x49\xa4\x3f\x60\x2e\x62\x70\x6e\xcf\x34\x58\x0b\xe9\x9a\xed\x10\x9c\x5b\xf8\x87\x8b\x03\x7c\x44\xfa\xac\x48\x70\x79\x5f\x15\xe8\x9c\xb5\x7c\x0b\xf8\x0c\xe9\x27\xf3\xb5\xf0\xd2\x99\x00\xd2\x25\x3a\x77\x63\x2d\xca\x8d\x47\x84\x4b\xa4\x0a\x94\x90\x0b\x66\x8c\xb7\x62\xe5\x6f\x9c\x4b\xac\xd5\x4c\x3e\x22\x5c\xf0\x6b\xb8\x60\x44\x1a\x16\x19\xa4\x5e\x07\x7f\x28\x09\x4d\x53\x41\x7a\x04\xbc\xf2\x4f\xf1\x75\x7c\x22\xb5\x96\x70\x57\x08\x46\x1d\xed\x81\xe7\x84\x99\x83\x8d\x00\x00\xc2\x49\xed\x51\x6b\xbe\x41\xd8\x96\x12\x48\xdd\x91\xe6\xf2\x31\x99\xc3\x02\xea\xdb\x1a\x1a\x0e\xbf\xff\x27\xa3\xe4\xa2\x5e\x81\x0c\x62\x1b\x9f\x97\x4f\xc2\x47\x45\xb7\x71\xb5\x41\x01\xd7\x76\x69\xcb\x84\xc1\x36\xd2\x17\x83\xac\xbe\x5c\x05\xb7\xfd\x27\x07\xb8\x57\xb5\xe1\x8d\x0e\xe7\xe0\x0a\xe2\xeb\x8e\x14\xec\x51\xf1\x6d\x62\x6d\x5d\xd1\xb7\xcf\x39\x98\x65\x20\x4b\x21\x82\x9a\xa3\x94\xa5\xd6\xac\x72\x0e\x2e\x2f\xa1\x8b\x9e\xcd\x52\x6e\xd6\x8a\x6e\x77\x05\x55\xc9\xfc\x68\x64\xcb\x9c\x49\xb9\xf0\x1b\x7a\x3b\xee\x74\x32\x32\x46\x9e\x6e\xb4\x2a\xbe\x30\x43\xc9\xeb\xf9\x94\x59\xb1\x6b\xd1\x6b\xa4\x52\xcb\xb0\x14\xd5\xe5\xa2\x7e\xe7\xf1\xb9\x64\xc2\x24\x8a\xbe\xa3\x5e\xc0\x52\x56\x37\xf3\x05\xbc\x57\x4a\x20\x93\x00\xb6\x63\x64\x00\x01\x6f\xa7\x76\x0e\x5d\x2b\xf6\x3e\xf4\x0a\x32\xa8\xb1\xcc\x40\xd2\x02\xf7\xa0\x9e\xeb\xd6\xd7\x3f\x57\xcc\xc2\xc8\x44\x83\x68\x4d\xce\x44\x87\x72\x7a\x04\x3b\xb0\x61\x26\xb2\x3a\x13\xbe\xff\xa4\xd2\xf1\xc5\xae\xfa\xc0\x53\xab\xef\x8b\xf6\x87\x8f\xa1\xaf\xf3\x47\x85\x9a\x64\xce\xe1\x70\x80\x89\xd4\xbe\xac\x70\x28\xb1\x49\x40\x98\xb0\xa1\x40\x3b\xc0\xf7\x67\x34\x0c\xc6\x98\x87\x8d\x8f\xb3\xc1\xb8\xe4\x4a\x12\xe3\xd2\x2c\x85\x48\x82\xd2\xa3\x48\x66\x60\xa5\x84\xc0\xdc\x37\xe6\xcd\x79\xa8\x3b\xbf\xd1\xb5\x6a\x46\xf1\xed\xc8\x66\x5e\xdc\x10\x8c\x8e\xff\x49\x29\x8c\x48\x6d\xb2\xdf\x56\xf9\x97\x55\xbb\x23\xdb\xb6\x78\x94\xee\x85\xe0\xf4\x03\x3d\xb1\xa1\x7f\xd0\xa7\x4e\xa2\xfe\x37\xeb\x2c\x67\xba\x59\x7d\xb2\x31\xf2\x46\x4d\xc3\x72\x5a\x72\x63\x13\x38\xaa\xdc\x35\xbf\x6e\xf7\x2b\x00\x00\xff\xff\xbc\x48\xb9\x08\x3f\x09\x00\x00")

func resourcesKotlinConceptTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinConceptTemplate,
		"resources/kotlin.concept.template",
	)
}

func resourcesKotlinConceptTemplate() (*asset, error) {
	bytes, err := resourcesKotlinConceptTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.concept.template", size: 2367, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x51\x6b\xdb\x30\x10\x7e\xcf\xaf\x38\x4c\x1f\x1c\x08\x62\x0c\xb6\x87\x8c\x42\x8b\xcb\xb6\x76\xa3\x83\x3a\xb0\xc7\x72\x91\xaf\x89\x3a\x5b\x32\xd2\xd9\x6b\xe7\xe9\xbf\x0f\xc9\x76\xea\x34\xee\xc3\xf2\x10\x45\xa7\xef\xfb\xee\xee\xd3\x29\x35\xca\x5f\xb8\x23\xe8\x3a\x71\x9b\x7b\xbf\x58\xa8\xaa\x36\x96\x41\x9a\x4a\xb0\xda\x4a\x23\x0a\xd3\x12\xa3\x2a\x85\x34\x9a\x51\x69\xb2\x42\x1a\x5b\xa0\xc8\xc2\x77\x66\xaa\x0a\x75\x71\x85\x8c\x3f\x15\xef\xc3\xfa\xbf\x12\x9f\x4b\xf3\x3b\x33\x9a\x2d\x4a\x1e\xb9\x9a\x78\x80\x48\x63\x29\xf2\xc2\xb1\x13\x23\xf0\xd3\x1b\x48\xb6\xa8\x1d\x4a\x56\x46\x3b\xf1\x9d\x8a\x1d\xd9\xcd\x4b\x68\x24\x3d\x62\x8b\x42\x19\x71\xad\xeb\x86\x73\xb6\x84\xd5\x1b\x7a\x8e\xac\xc2\x52\xfd\xc1\x40\xef\xeb\xcd\xc7\xd0\xb6\xa4\x23\xc1\x86\x55\x29\xb2\xc6\x5a\xd2\xf2\x79\xb1\xb8\x38\x45\xd7\xcd\xb6\x54\x12\x64\x89\xce\x05\xcb\xc7\x6e\xb2\x10\xf0\x7e\xdc\xc2\x1a\x4e\x9c\x49\x97\x2b\x38\x9c\x77\x0b\x00\x08\x06\xd7\xa8\x95\xd1\x60\xb6\x8f\x74\x08\x87\xcf\xc5\x4d\x5b\xe5\x8c\xac\xe4\x21\xd4\x62\x09\x5d\x77\xf6\x3a\xe7\x7d\xf6\xe3\x76\x73\x77\x99\x6d\xee\xaf\xaf\xe0\x1c\x92\x00\x09\x93\x20\x66\xb0\xe3\x36\x89\xa2\x1e\xe2\xd2\x75\x16\xf5\x8e\xe0\x8c\x9f\x34\xac\xcf\x41\x0c\x23\xe1\xc0\xfb\x08\x98\xf1\x21\x56\x3f\x98\x10\x89\xe2\x16\x2b\x02\xef\xd3\x83\x9a\x5a\xc1\x19\x32\xdb\x20\x19\x11\x97\xcc\x56\x6d\x1b\x26\xe7\x7d\xd7\xa9\x07\xd0\x01\x05\xef\xc2\x2e\x59\x25\x61\x21\x5d\x78\x3f\x36\x1a\xc8\x51\xd6\xfb\x75\x4c\x13\xd5\xfe\xc2\x17\xe2\x6f\x86\x4b\xa5\x37\xcf\x75\x48\x19\x3a\x88\xc4\xe5\x68\xfb\xcc\x4c\xa7\xcb\x89\xb9\x4a\xab\xa9\xd7\x47\x26\xbc\x59\xf2\x11\xbc\x6e\x38\xaa\x26\xc7\x75\x26\xab\x57\x85\x2f\x87\xd2\xe6\xc9\xb2\xaf\x33\x59\xc5\x5b\x8b\x2e\x0e\x17\x37\x3a\xea\x7d\xb2\x3c\x70\x7b\x15\x3f\x5c\xda\x8b\xae\x69\xc9\x5a\x55\x10\x3c\x34\x1a\x76\xc4\x77\xe4\x4c\x63\x25\x7d\x45\xb7\x4f\x97\x6b\xc8\xd9\x2a\xbd\x9b\x34\x6c\x89\x1b\xab\x43\x52\x10\x61\x44\x7b\x53\xc3\xaf\x7c\x8f\xef\x3f\x7c\x04\xef\x87\x09\x59\xcc\x26\x98\x3c\xc8\x1b\x67\x74\xc8\x31\x79\x88\xa7\x89\x78\xaf\x9c\x08\x2f\x2c\x8e\xa1\x98\x94\x78\xe9\x7a\x4e\x9a\x1c\xbd\xfb\x47\x67\xf4\xd0\xf8\x5c\x09\x2d\x59\xf5\xf0\x9c\xf2\xd3\x1a\x4e\xfe\x21\xa6\xf7\xdc\xe3\x26\x87\x29\x3f\x8d\xaa\xfe\x5f\x00\x00\x00\xff\xff\x65\xbd\x18\xd1\x39\x05\x00\x00")

func resourcesKotlinContractTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractTemplate,
		"resources/kotlin.contract.template",
	)
}

func resourcesKotlinContractTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contract.template", size: 1337, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinPomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xdf\x8f\xe3\x34\x10\x7e\xee\xfe\x15\x66\xd5\x17\x24\x62\xb7\x7b\x80\x4e\x2b\x93\x17\x96\x87\x43\x77\x80\xee\xd0\x09\x89\x27\xd7\x99\x66\x5d\x12\x3b\xb2\x9d\xb6\xa8\xea\xff\x8e\xfc\x23\x3f\x9c\x26\xbb\x80\x74\x7d\x69\x3c\xf3\xcd\xcc\x37\x19\xfb\x73\x68\xa3\xd5\x01\xb8\x45\xe7\xba\x92\xe6\x87\xfb\x67\x6b\x9b\x47\x42\x6a\x76\x04\x89\x59\xc3\xf8\x33\x60\xa5\x4b\xf2\xdb\xaf\x1f\xc8\xb7\x78\x83\x37\xf7\x01\xf9\x78\x36\xa2\x47\x9f\x4e\x27\x7c\x7a\xe3\x71\x0f\x9b\xcd\x96\xfc\xf1\xe1\xfd\x27\xfe\x0c\x35\xcb\x84\x34\x96\x49\x0e\xf7\xe8\x6c\xc4\xa3\xf1\xc6\xf7\x8a\x33\x2b\x94\xfc\x17\xc5\xd0\x12\xe2\x6c\x8a\x60\xcc\x3c\x0e\x9f\x4d\x71\x9f\xdf\x21\x44\x6b\x55\x40\xf5\x19\xb4\x11\x4a\xe6\xde\x47\x49\x62\x73\xa0\x46\xab\x06\xb4\x15\x60\xdc\x12\x21\xba\x63\x06\x9e\x84\xce\x89\x85\xba\xa1\xa4\x5b\xde\xad\x56\xb4\xd4\xaa\x6d\xde\x15\x79\xfc\xa7\xa4\x33\xdc\x21\xb4\xa2\x4c\x5b\xb1\x67\xdc\xbe\x2b\xf2\xe1\x91\x92\x91\xd9\xc3\x8e\xb1\x78\xfc\xa7\xe4\x38\xb0\x71\xa4\x7d\x7b\x5c\xd5\x8d\xa8\x40\x63\xcb\x74\x09\x36\xdf\xe2\xb7\x94\xcc\xbb\x66\xc3\x8c\x6a\x35\x87\xd9\xb0\xe8\x0a\x61\x7f\x29\x5b\x09\x89\x3b\x0a\x5b\xbc\xc5\xdf\x6f\x28\x99\x98\x5d\xef\xd1\xd4\xa7\xa9\x98\x2c\x5b\x56\xc2\xe7\x21\xb4\x8f\x5b\x04\xcd\x25\x62\x8d\x78\x31\xc7\xc8\x3f\x17\x7e\x38\xd6\xbf\x8f\xde\xd1\xb2\xfb\x8e\x92\x74\xd6\xfd\x38\xd7\x97\xf8\x74\x4d\x26\x3a\x1e\xe8\xfa\x32\x2c\xae\xd3\x99\xf6\x23\x5d\x5f\xe2\xd3\x35\x99\x2a\x2d\xa0\x01\x59\x80\xe4\xbe\xf2\x6a\x35\x18\xfe\x0e\x73\xf0\xb3\xe8\x4a\x2b\x5d\xe2\x03\xd8\x9d\x66\x42\x1a\x1c\x1a\x4a\x88\x45\xfc\x88\x44\x00\x65\xc6\x16\x95\xd8\x65\x07\x0d\x6f\xa7\x1c\x63\xcc\xc0\x34\x1d\xf1\x75\xba\x0d\x49\x4a\x71\x4a\x79\x74\x18\x24\x58\xcc\x95\x2e\x58\x7a\x1c\x92\xf3\xe0\xfd\x19\x57\x1a\x6e\xce\xc3\x70\x20\xfe\x7c\x70\x47\xf4\x9b\xaf\x13\x2a\xab\x2f\xc2\x64\x2f\xa4\x53\xa2\x2f\x49\x86\xab\x1a\x5b\xb1\xe3\x0a\x17\xea\x08\x96\x89\xea\x05\x56\x1d\x24\x8b\xf4\x97\x69\x6d\xf0\x16\x6f\x5e\x61\x35\x5a\x77\x5b\x5d\x43\xa3\x8c\xb0\x4a\x0f\x3a\xd7\x9b\xfa\x3d\x48\x8d\x64\x8d\x79\x56\xd6\x8c\x76\x0c\x48\xb6\xab\xa0\xc8\xf7\xac\x32\x40\x49\xb7\xec\x42\xc8\x4d\x0c\x15\x45\xce\x41\x5a\xcd\x2a\x4a\xc4\x80\x94\xac\x86\xfc\xc7\xe0\x40\x1f\xfb\xe2\x94\x78\x47\x87\x6a\x75\x95\x3b\xa1\x37\x8f\x84\x38\x86\xf8\x46\xee\xbd\xe1\x81\x12\x87\x8c\x7b\x35\x6d\x65\xb4\xee\xda\xdf\xb5\xa2\x8a\xf2\x5b\x08\x0d\xdc\x43\xd7\x97\xa8\xed\x57\x4a\x06\x6b\x48\x19\x44\xf2\x69\x06\x4b\x8c\xe6\xa4\x66\x42\x92\xee\x64\x4e\xb1\x21\x83\x6a\x6d\xd3\xda\xd9\x0c\x41\xb8\x63\x3c\xe1\x15\x33\x06\x0c\x25\xd3\x88\x6e\x4c\x21\xff\xf0\x7e\x3b\xcb\x68\x48\x73\x4d\x0d\x44\xfb\x14\x37\x7d\x86\x97\x95\xdc\x08\x64\x52\x90\xba\xb3\x52\xfd\xe2\x66\x14\x55\x66\x7d\x89\xdf\x09\x78\xa4\x89\x23\xeb\x20\x29\x43\x68\x48\xd5\x54\x6d\x29\xa4\x49\x56\x0b\x02\x18\x07\x1e\xa6\x1f\xe3\x5e\x11\xc1\xf0\x0d\x70\x60\x3a\x0b\xf8\x57\x24\xf0\x01\xbf\x71\xd7\x4d\x22\x7b\x1e\xc0\x95\xdc\x8b\xb2\xd5\xfe\xc3\x64\xb0\xbf\x32\xd5\x85\xf9\x85\x77\x3a\x93\x92\x92\xae\xff\xd5\xea\xe6\x55\x2c\xe8\x7b\xe8\xf0\xa5\xee\xfe\xcf\x45\xf2\x9f\x2e\x86\x41\x17\xce\xc0\x5b\xd7\x8e\x49\x1d\xa9\xf3\xd6\xd7\x4b\x44\xb8\xa1\xc7\x12\x31\x01\x95\x8a\x55\x26\x0f\xff\x03\xdc\xaf\x50\xf8\x9f\x2b\x4d\x16\x6a\x8f\x1c\xfe\x0e\x76\xbf\xa5\x51\x3b\x97\x54\x27\xa6\x65\x6e\x75\x0b\x94\xc4\x05\x42\xf4\xab\x2c\x43\x4f\xc2\x38\x11\x44\xce\x26\x64\x69\x50\x96\xa5\xb1\x4c\x97\x13\x6a\xc1\x98\x67\x07\x76\x64\x59\xc3\x34\xab\xc1\x82\x36\x6e\x88\x65\x1e\xb2\xfe\xe4\x95\x15\x19\xab\x05\xb7\xc8\x7d\xa7\xa2\xbd\xd2\xe8\xe7\x4f\x1f\xb3\x37\x9b\xef\x10\x93\x52\x59\xcf\xf3\xb6\x1e\x09\x05\x57\xb1\xab\xb9\xed\x86\x92\x2d\xd7\x3d\x39\x96\x94\x44\x75\xf4\xdf\x47\xee\x04\xe7\xff\x04\x00\x00\xff\xff\xf9\x77\x25\x36\x09\x0c\x00\x00")

func resourcesKotlinPomXmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinPomXml,
		"resources/kotlin.pom.xml",
	)
}

func resourcesKotlinPomXml() (*asset, error) {
	bytes, err := resourcesKotlinPomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.pom.xml", size: 3081, mode: os.FileMode(420), modTime: time.Unix(1542317707, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinStateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xcd\x6e\xf3\x36\x10\xbc\xeb\x29\xd6\xc2\x87\x0f\x12\x12\x08\xed\x55\x88\x92\xba\x46\x50\x04\x0d\xdc\x00\xce\x0b\x30\x32\xed\x32\xa5\x49\x85\x5c\x19\x70\x69\xbe\x7b\x41\x4a\x96\x45\xfd\x04\x68\xd0\xf6\x54\x1d\x6c\x49\x5c\xce\x0e\x67\x67\x57\x15\x29\xff\x20\x7b\x0a\xc6\x64\xeb\x8d\xb5\x51\xc4\x0e\x95\x54\x08\x82\x62\x56\x4a\xb5\x25\xee\x97\x66\x6c\x4b\x05\x32\x3c\x65\xcb\x37\x8d\x8a\x94\xf8\x42\x14\x9e\x2e\xc1\xef\xe4\x48\xb2\x1a\x19\xcf\x56\xb5\x52\x54\x94\xa7\x19\x18\x4d\x15\x23\x9c\xfd\x49\x90\x49\x91\xad\xdc\xc2\xe6\xf2\xea\x8d\xd3\x28\x32\x66\x4b\x77\x4c\x50\x88\xe5\x91\x2a\xc5\xb6\x34\xb6\xd6\x18\xb6\x03\xfa\x01\xd9\x9a\x1c\x28\xc4\x9c\x09\x4a\xd4\xd3\x36\xb6\xf6\x12\x04\x47\xc2\x8d\xa1\x5c\x53\x6b\x8f\x44\x19\x43\xc5\xd6\xed\xf3\x7f\x51\xb7\xdf\x27\x5c\x71\xa2\x35\xc4\xb1\xb5\xd1\x4f\x63\x06\xa5\x5f\x35\x26\xf3\x61\xd6\x26\xc6\x28\x22\xf6\x14\xbe\xb1\x5b\xf8\x46\x10\x15\xe4\x05\x64\x4b\x44\xc5\xde\x6a\xa4\xba\xa5\x27\x5c\x04\xfc\xe0\x9e\xe2\xdb\xb8\xcb\x0d\x47\xa2\xc0\x18\xbf\xd1\xd3\xb7\x36\x07\x63\x1a\xa4\x33\xfc\x42\xf1\x57\x89\x9c\x89\xd7\x53\x45\xaf\x07\x6d\xc2\x9f\xf4\x6f\x95\xd3\x89\x70\x40\x55\x53\x6b\x1f\xc2\x73\xa5\xf9\x40\xdd\x52\x0a\x5f\x1b\x9d\xad\xda\xbb\x0d\x12\xa4\x26\x6a\xa4\x81\x09\x15\x66\x11\x9e\xbd\xc8\x7e\xff\x7f\xa3\x94\x31\x48\x0f\x15\x27\xd8\xaf\x7d\x83\x63\xed\x3f\x2e\x21\x5c\x34\xf4\xf1\x3d\x49\xac\x85\xdc\x1f\xaa\xf7\xa6\xdb\x13\x5d\xee\x00\x22\x00\x80\xbe\xfd\xa0\x22\x0a\x59\xc9\x2a\x22\x50\x43\x0e\xcf\x4c\xe3\x5d\xd0\x2d\xf7\x7e\x8f\xbb\xf6\x14\x93\xd4\x40\xf7\xec\xae\x11\x44\x01\x4b\xa5\xc8\x69\x02\x27\x49\x83\x9d\x4e\x0b\xf0\x42\xbc\xf4\xf6\x5b\x1b\x04\x29\x8a\xb5\x12\x41\x86\x6e\xdd\x46\xe1\x69\x76\xb5\x00\x94\x1b\x54\x4c\xec\x93\x14\x72\x68\x6e\x4d\xd4\x23\xab\xe0\x5d\x4b\x91\x37\x2b\x50\x40\x6c\xe2\xa8\xc7\xa8\x75\xc2\xa4\x0b\xfa\x71\x33\xc5\xda\x11\xdf\xca\xd7\x48\x97\x0c\x8a\xe6\xef\xa6\xab\x3e\x9c\xe1\x55\x36\xd5\x6f\x89\x58\x0b\x37\x10\xdf\x06\x5c\xe8\x00\x8b\xed\x92\xd0\x4e\xb0\x28\x40\xd4\x9c\x7b\x3a\x17\x2e\x5e\x7c\x6b\xe1\xfb\xf7\x81\xf9\x16\x8b\x8c\xe9\xb5\xc4\xc7\x43\x85\xa7\x24\xed\x8c\x14\xc8\xfd\x75\xbe\x10\xe8\x13\xcc\xb1\x29\xf4\x6c\xab\x64\xf5\x4c\x34\x26\x3f\xa6\x73\x72\xc5\xb6\x87\xdf\x1a\xc1\x2d\x45\x73\xc5\xa7\x1f\x35\xe1\x3a\x91\xf8\x3b\x55\x39\x2c\xc5\xe9\x21\xcd\xe1\x67\x29\x39\x25\x02\xc0\x04\x52\xfa\x20\x60\xfd\x49\x90\x82\x19\x59\x1b\x25\x14\xd0\xc4\x12\x0d\x49\x2f\x78\x10\xea\xb0\x1e\x5d\xfe\x6b\xc6\xc2\x37\x6f\x34\x72\xd7\xec\x9c\x19\xb4\x47\x3b\xf7\x46\xc3\x20\x08\x1b\xbb\xa2\x68\x5c\xe1\x1c\x80\x32\x9b\x5e\x0c\xd9\x7b\x9c\x86\xfd\x90\xb4\xbb\xda\x21\x9c\xfc\xad\x44\xad\x37\x53\x38\x9f\x61\xc6\xb7\x9f\x33\x1c\x53\x6c\x2d\xe0\x9b\x6c\x4c\xd0\x8c\xe2\x87\x6d\xea\x5b\x63\x4a\xc3\x56\xc7\xc5\xa8\x61\xdc\x77\x85\x30\xa1\x97\x9c\x27\x9e\xe9\x85\x24\xd1\xb0\x92\x9c\xd3\xd2\x15\xe6\xae\xd7\x27\xc1\x58\x5f\xcb\xb6\x1b\xef\x27\x4e\xf3\xe9\x89\x60\x72\x02\x74\x54\x61\x82\x6b\x6b\xfe\x3e\xcd\x2f\x66\x0d\x9b\xb6\xaf\xf1\x24\xdc\x27\xce\x19\x3a\x7a\xe6\x40\xff\x42\xa1\x02\x4b\xfd\x5f\xad\x1e\x9d\xf9\x6a\x0d\xc1\xa6\xc0\x5b\x36\x2d\xca\xf5\x53\x3c\xd5\x83\x93\xcc\x6d\x3b\xbd\x6d\xf4\x57\x00\x00\x00\xff\xff\x5c\xa0\x71\x05\xc3\x0b\x00\x00")

func resourcesKotlinStateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinStateTemplate,
		"resources/kotlin.state.template",
	)
}

func resourcesKotlinStateTemplate() (*asset, error) {
	bytes, err := resourcesKotlinStateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.template", size: 3011, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/kotlin.concept.template": resourcesKotlinConceptTemplate,
	"resources/kotlin.contract.template": resourcesKotlinContractTemplate,
	"resources/kotlin.pom.xml": resourcesKotlinPomXml,
	"resources/kotlin.state.template": resourcesKotlinStateTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"kotlin.concept.template": &bintree{resourcesKotlinConceptTemplate, map[string]*bintree{}},
		"kotlin.contract.template": &bintree{resourcesKotlinContractTemplate, map[string]*bintree{}},
		"kotlin.pom.xml": &bintree{resourcesKotlinPomXml, map[string]*bintree{}},
		"kotlin.state.template": &bintree{resourcesKotlinStateTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

