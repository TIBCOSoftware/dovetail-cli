// Code generated by go-bindata.
// sources:
// resources/kotlin.concept.template
// resources/kotlin.contract.template
// resources/kotlin.pom.xml
// resources/kotlin.state.template
// DO NOT EDIT!

package contract

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesKotlinConceptTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x5d\x6f\xd3\x30\x14\x7d\xcf\xaf\xb8\x8d\xa6\x29\xd5\xa6\x08\x5e\x2b\xc2\x28\x65\x42\x08\x54\x90\xb6\x3f\xe0\xa5\xb7\xc3\xc3\xb5\x33\xfb\xa6\x52\x70\xfd\xdf\x91\x9d\xb4\xcd\xe7\x04\x48\xbc\x91\x87\x7c\xf9\xe4\xdc\xe3\x73\xcf\x4d\xc1\xf2\x1f\xec\x11\xc1\xda\x74\x7d\xe7\x5c\x14\xf1\x5d\xa1\x34\x81\x44\x4a\x73\xa5\x37\xcc\x9f\x31\x35\xa8\x39\x13\xfc\x27\x23\xae\x64\xba\xf2\x0b\x77\xc7\x57\x0f\x02\x27\xbe\xe2\x1b\x94\xc4\xa9\x4a\x97\x0f\x86\x34\xcb\xe9\x1b\xd3\x54\x1d\xc1\x4f\x6c\xcf\xd2\x92\xb8\x48\x57\xa5\xd6\x28\xf3\x2a\x8a\xde\x0d\xa9\xad\xdd\xe0\x96\x4b\x84\x78\x49\xa4\x3f\x60\x2e\x62\x70\x6e\xcf\x34\x58\x0b\xe9\x9a\xed\x10\x9c\x5b\xf8\x87\x8b\x03\x7c\x44\xfa\xac\x48\x70\x79\x5f\x15\xe8\x9c\xb5\x7c\x0b\xf8\x0c\xe9\x27\xf3\xb5\xf0\xd2\x99\x00\xd2\x25\x3a\x77\x63\x2d\xca\x8d\x47\x84\x4b\xa4\x0a\x94\x90\x0b\x66\x8c\xb7\x62\xe5\x6f\x9c\x4b\xac\xd5\x4c\x3e\x22\x5c\xf0\x6b\xb8\x60\x44\x1a\x16\x19\xa4\x5e\x07\x7f\x28\x09\x4d\x53\x41\x7a\x04\xbc\xf2\x4f\xf1\x75\x7c\x22\xb5\x96\x70\x57\x08\x46\x1d\xed\x81\xe7\x84\x99\x83\x8d\x00\x00\xc2\x49\xed\x51\x6b\xbe\x41\xd8\x96\x12\x48\xdd\x91\xe6\xf2\x31\x99\xc3\x02\xea\xdb\x1a\x1a\x0e\xbf\xff\x27\xa3\xe4\xa2\x5e\x81\x0c\x62\x1b\x9f\x97\x4f\xc2\x47\x45\xb7\x71\xb5\x41\x01\xd7\x76\x69\xcb\x84\xc1\x36\xd2\x17\x83\xac\xbe\x5c\x05\xb7\xfd\x27\x07\xb8\x57\xb5\xe1\x8d\x0e\xe7\xe0\x0a\xe2\xeb\x8e\x14\xec\x51\xf1\x6d\x62\x6d\x5d\xd1\xb7\xcf\x39\x98\x65\x20\x4b\x21\x82\x9a\xa3\x94\xa5\xd6\xac\x72\x0e\x2e\x2f\xa1\x8b\x9e\xcd\x52\x6e\xd6\x8a\x6e\x77\x05\x55\xc9\xfc\x68\x64\xcb\x9c\x49\xb9\xf0\x1b\x7a\x3b\xee\x74\x32\x32\x46\x9e\x6e\xb4\x2a\xbe\x30\x43\xc9\xeb\xf9\x94\x59\xb1\x6b\xd1\x6b\xa4\x52\xcb\xb0\x14\xd5\xe5\xa2\x7e\xe7\xf1\xb9\x64\xc2\x24\x8a\xbe\xa3\x5e\xc0\x52\x56\x37\xf3\x05\xbc\x57\x4a\x20\x93\x00\xb6\x63\x64\x00\x01\x6f\xa7\x76\x0e\x5d\x2b\xf6\x3e\xf4\x0a\x32\xa8\xb1\xcc\x40\xd2\x02\xf7\xa0\x9e\xeb\xd6\xd7\x3f\x57\xcc\xc2\xc8\x44\x83\x68\x4d\xce\x44\x87\x72\x7a\x04\x3b\xb0\x61\x26\xb2\x3a\x13\xbe\xff\xa4\xd2\xf1\xc5\xae\xfa\xc0\x53\xab\xef\x8b\xf6\x87\x8f\xa1\xaf\xf3\x47\x85\x9a\x64\xce\xe1\x70\x80\x89\xd4\xbe\xac\x70\x28\xb1\x49\x40\x98\xb0\xa1\x40\x3b\xc0\xf7\x67\x34\x0c\xc6\x98\x87\x8d\x8f\xb3\xc1\xb8\xe4\x4a\x12\xe3\xd2\x2c\x85\x48\x82\xd2\xa3\x48\x66\x60\xa5\x84\xc0\xdc\x37\xe6\xcd\x79\xa8\x3b\xbf\xd1\xb5\x6a\x46\xf1\xed\xc8\x66\x5e\xdc\x10\x8c\x8e\xff\x49\x29\x8c\x48\x6d\xb2\xdf\x56\xf9\x97\x55\xbb\x23\xdb\xb6\x78\x94\xee\x85\xe0\xf4\x03\x3d\xb1\xa1\x7f\xd0\xa7\x4e\xa2\xfe\x37\xeb\x2c\x67\xba\x59\x7d\xb2\x31\xf2\x46\x4d\xc3\x72\x5a\x72\x63\x13\x38\xaa\xdc\x35\xbf\x6e\xf7\x2b\x00\x00\xff\xff\xbc\x48\xb9\x08\x3f\x09\x00\x00")

func resourcesKotlinConceptTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinConceptTemplate,
		"resources/kotlin.concept.template",
	)
}

func resourcesKotlinConceptTemplate() (*asset, error) {
	bytes, err := resourcesKotlinConceptTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.concept.template", size: 2367, mode: os.FileMode(420), modTime: time.Unix(1542209137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinContractTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x41\x6f\xdb\x3c\x0c\xbd\xe7\x57\x10\x46\x0f\x0e\x10\x08\x1f\x3e\x60\x3b\x64\x28\xd0\xc0\xc5\xb6\x76\x43\x37\x34\x01\x76\x2c\x18\x59\x4d\xd8\xd9\x92\x21\xd1\x59\x32\x4f\xff\x7d\x90\x6c\xa7\x4e\xe3\x1c\xd6\x43\x15\x49\xef\x3d\x92\x8f\x94\x2b\x94\x3f\x71\xa3\xa0\x69\xc4\xc3\xd2\xfb\xc9\x84\xca\xca\x58\x06\x69\x4a\xc1\xb4\x96\x46\xe4\x66\xa7\x18\xa9\x10\xd2\x68\x46\xd2\xca\x0a\x69\x6c\x8e\x22\x0b\xff\x33\x53\x96\xa8\xf3\x5b\x64\xfc\x41\xbc\x0d\xeb\xbf\x4a\x7c\x2c\xcc\xaf\xcc\x68\xb6\x28\xb9\xe7\x6a\xc5\x1d\x44\x1a\xab\x22\x2f\x5c\x3b\xd1\x03\x3f\x5c\x40\xb2\x45\xed\x50\x32\x19\xed\xc4\x57\x95\x6f\x94\x5d\xbd\x1e\xf5\xa4\x17\xdc\xa1\x20\x23\xee\x74\x55\xf3\x92\xad\xc2\xf2\x82\x9e\x53\x96\xb0\xa0\xdf\x18\xe8\x6d\xbe\xcb\xfe\x68\x5d\xa8\x13\xc1\x9a\xa9\x10\x59\x6d\xad\xd2\xf2\x70\x41\x8f\x72\xa5\x99\xf8\x20\x16\x6b\x17\x0b\xf9\x8e\x96\x0f\x93\xc9\xcd\xb9\x74\x55\xaf\x0b\x92\x20\x0b\x74\x2e\xf4\xa7\x2f\x3d\x0b\x07\xde\xf7\x5b\x98\xc3\x99\x8d\xe9\x74\x06\xc7\xfb\x66\x02\x00\xa1\x1b\x15\x6a\x32\x1a\xcc\xfa\x45\x1d\x8f\xc3\xdf\xcd\xfd\xae\x5c\x32\x32\xc9\xe3\xd1\x0e\x0b\x68\x9a\xab\xb7\x31\x9f\xb2\x6f\x0f\xab\xc7\x45\xb6\x7a\xba\xbb\x85\x6b\x48\x02\x24\x8c\x8d\x18\xc1\xf6\xdb\x24\x8a\x7a\x88\x4b\xd3\x58\xd4\x1b\x05\x57\xbc\xd7\x30\xbf\x06\xd1\xcd\x8f\x03\xef\x23\x60\xc4\x87\x98\x7d\x67\x42\x24\x8a\x07\x2c\x15\x78\x9f\x1e\xd5\x68\x06\x57\xc8\x6c\x83\x64\x44\x2c\x98\x2d\xad\x6b\x56\xce\xfb\xa6\xa1\x67\xd0\x01\x05\xff\x85\x5d\x32\x4b\xc2\xa2\x74\xee\x7d\x5f\x68\x20\x47\x59\xef\xe7\x31\x4c\x54\xfb\x03\x9f\x14\x7f\x31\x5c\x90\x5e\x1d\xaa\x10\x32\x54\x10\x89\xd3\xde\xf6\x91\x07\x90\x4e\x07\xe6\x92\xa6\xa1\xd7\x27\x26\x5c\x4c\xf9\x04\x5e\xd5\x1c\x55\x93\xd3\x3c\x93\xd9\x9b\xc4\xa7\x5d\x6a\xe3\x64\xd9\xe6\x99\xcc\x62\xd7\xa2\x8b\x5d\xe3\x7a\x47\xbd\x4f\xa6\x47\x6e\xab\xe2\xbb\xa6\xbd\xea\x9a\x9d\xb2\x96\x72\x05\xcf\xb5\x86\x8d\xe2\x47\xe5\x4c\x6d\xa5\xfa\x8c\x6e\x9b\x4e\xe7\xb0\x64\x4b\x7a\x33\x28\xd8\x2a\xae\xad\x0e\x41\x41\x84\x11\x6d\x4d\x0d\xbf\x96\x5b\xfc\xff\xdd\x7b\xf0\xbe\x9b\x90\xc9\x68\x80\xc1\xeb\xbd\x77\x46\x87\x18\x83\x57\x7b\x1e\x88\xb7\xe4\x44\x78\x8e\x71\x0c\xc5\x20\xc5\x85\x6b\x39\x69\x72\xf2\x91\x78\x71\x46\x77\x85\x8f\xa5\xb0\x53\x96\x9e\x0f\x29\xef\xe7\x70\xf6\x39\x19\xf6\xb9\xc5\x0d\x2e\x53\xde\xf7\xaa\xfe\x6f\x00\x00\x00\xff\xff\x60\xbc\x9b\xde\x66\x05\x00\x00")

func resourcesKotlinContractTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinContractTemplate,
		"resources/kotlin.contract.template",
	)
}

func resourcesKotlinContractTemplate() (*asset, error) {
	bytes, err := resourcesKotlinContractTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.contract.template", size: 1382, mode: os.FileMode(420), modTime: time.Unix(1553539937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinPomXml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x4b\x8f\xdb\x36\x10\x3e\x7b\x7f\x05\xbb\xd8\x4b\x81\x88\xb4\x77\x13\x34\x58\xb0\xba\x34\x3d\xa4\x48\xda\x22\x29\x82\x02\x3d\xd1\xd4\x58\x4b\x87\x22\x05\x92\xb2\x5d\x18\xfe\xef\x05\x1f\x7a\x5a\xb6\xfb\x40\x7d\xb1\x38\xf3\xcd\xf0\x1b\x0e\x67\x86\xb4\x36\x7a\x0b\xdc\xa1\x43\x25\x95\xfd\xfe\xfe\xc5\xb9\xfa\x99\x90\x8a\xed\x40\x61\x56\x33\xfe\x02\x58\x9b\x92\xfc\xfa\xcb\x47\xf2\x1a\x2f\xf1\xf2\x3e\x22\x9f\x0f\x56\x74\xe8\xfd\x7e\x8f\xf7\x4f\x01\xf7\xb8\x5c\xae\xc8\xef\x1f\x3f\x7c\xe6\x2f\x50\xb1\x4c\x28\xeb\x98\xe2\x70\x8f\x0e\x56\x3c\xdb\x20\xfc\xa0\x39\x73\x42\xab\xbf\xb1\x19\xba\x84\x38\xd8\x22\x0a\xb3\x80\xc3\x07\x5b\xdc\xe7\x77\x08\xd1\x4a\x17\x20\xbf\x80\xb1\x42\xab\x3c\xe8\x28\x19\xc9\x3c\xa8\x36\xba\x06\xe3\x04\x58\xbf\x44\x88\xae\x99\x85\x77\xc2\xe4\xc4\x41\x55\x53\xd2\x2e\xef\x16\x0b\x5a\x1a\xdd\xd4\xef\x8b\x3c\xfd\x53\xd2\x0a\xee\x10\x5a\x50\x66\x9c\xd8\x30\xee\xde\x17\x79\xff\x49\xc9\x40\x1c\x60\xbb\xb4\x79\xfa\xa7\x64\xd7\xb3\xf1\xa4\x43\x78\x5c\x57\xb5\x90\x60\xb0\x63\xa6\x04\x97\xaf\xf0\x5b\x4a\xe6\x55\xb3\x66\x56\x37\x86\xc3\xac\x59\x52\x45\xb3\xaf\xda\x49\xa1\x70\x4b\x61\x85\x1f\xf1\x77\x2b\x4a\x26\x62\x1f\x7b\x12\x75\x6e\x24\x53\x65\xc3\x4a\xf8\xd2\x9b\x76\x76\x17\x41\x73\x8e\x58\x2d\xae\xfa\x18\xe8\xe7\xcc\xb7\xbb\xea\xb7\xc1\x19\x5d\x56\xdf\x51\x32\xce\x75\x97\xce\x87\x63\xfa\x3a\x8d\x32\x3a\x4c\xe8\xc3\xb1\x5f\x9c\xa6\x39\xed\x52\xfa\x70\x4c\x5f\xa7\x51\x56\x69\x01\x35\xa8\x02\x14\x0f\x3b\x2f\x16\xbd\xe0\xcf\x98\x87\x90\x8b\x76\x6b\x6d\x4a\xbc\x05\xb7\x36\x4c\x28\x8b\x63\x40\x23\x62\x09\x3f\x20\x11\x41\x99\x75\x85\x14\xeb\x6c\x5b\x7c\x7d\x3b\xe5\x98\x6c\x7a\xa6\xe3\x14\x9f\xa6\xd7\x90\x8c\x29\x4e\x29\x0f\x8a\x41\x81\xc3\x5c\x9b\x82\x8d\xcb\x61\x54\x0f\x41\x9f\x71\x6d\xe0\xac\x1e\xfa\x82\xf8\xe3\x35\x5e\xbe\xfa\x76\x44\x64\xf1\xbf\xf0\xd8\x08\xe5\xfb\xd0\x35\x2a\x8f\xbe\x5b\xfc\x07\x32\x5c\x57\xd8\x89\x35\xd7\xb8\xd0\x3b\x70\x4c\xc8\x2b\xac\x5a\x48\x96\xe8\x5f\xa6\xb5\xc4\x2b\xfc\xf4\x0a\xdd\xe0\x35\xbc\x71\x73\xc4\x6a\x26\x75\x25\x94\x96\x6c\x6d\x71\x05\xce\x08\x6e\xaf\xd0\x4b\x88\x4c\xc1\x3e\x33\x20\x05\xbf\xc6\x70\x85\x97\xf8\xcd\xad\x83\x1b\xac\xdb\x5a\x34\x50\x6b\x2b\x9c\x36\x7d\x23\xee\x44\x5d\x91\x50\xab\x58\x6d\x5f\xb4\xb3\x83\x2b\x0d\x8a\xad\x25\x14\xf9\x86\x49\x0b\x94\xb4\xcb\xd6\x84\x9c\xd9\x50\x51\xe4\x1c\x94\x33\x4c\x52\x22\x7a\xa4\x62\x15\xe4\x3f\x44\x05\xfa\xd4\x6d\x4e\x49\x50\xb4\xa8\xc6\xc8\xdc\x4f\x22\xfb\x4c\x88\x67\x88\xcf\xe6\x51\x10\x3c\x52\xe2\x91\xa9\x98\xc6\xa1\x0c\xd6\x6d\xf8\xeb\x46\xc8\x34\x1f\x0a\x61\x80\x07\xe8\xc3\x31\x0d\x9f\x13\x25\xbd\x34\xba\x8c\x5d\xfc\xdd\x0c\x96\x58\xc3\x49\xc5\x84\x22\x6d\xeb\x98\x62\xa3\x07\xdd\xb8\xba\x71\xb3\x1e\xe2\x64\x49\xf6\x84\x4b\x66\x2d\x58\x4a\xa6\x16\x6d\x9a\xa2\xff\xfe\x7c\x5b\xc9\x20\x49\x73\x41\xf5\x44\x3b\x17\x67\x71\xc6\xc3\x1a\x8d\x2c\x32\xd9\x90\xfa\x72\x96\x3f\xfb\x1c\xa5\x36\xf8\x70\x4c\x0f\x19\x3c\x68\xda\x03\x69\xdf\xf3\x7a\xd3\xe8\xaa\x96\x4d\x29\x94\x1d\xad\x2e\x74\xe8\x94\xf0\x98\xfd\x64\x77\xa3\x4b\xc7\x47\xca\x96\x99\x2c\xe2\x6f\xf4\xe8\x47\xfc\x84\x57\x93\xbe\x1c\x00\x5c\xab\x8d\x28\x1b\x13\x5e\x4e\xbd\xfc\x46\x56\x2f\xe4\x2f\x9e\xe9\x8c\x4b\x4a\xda\xf8\x17\x8b\xb3\xa3\xb8\x30\x80\x62\x84\xd7\xa2\xfb\x37\x93\xee\x1f\x4d\xae\xbe\x2f\x1c\x80\x37\x3e\x1c\x3b\x56\x8c\x95\xe7\xba\xae\x45\xc4\x27\xc4\xb0\x45\x4c\x40\xa5\x66\xd2\xe6\xf1\xbf\x87\x87\x15\x8a\xff\x73\x5b\x93\x0b\x7b\x0f\x14\xe1\x91\xe0\x7f\x97\x52\xed\x55\x4a\xef\x99\x51\xb9\x33\x0d\x50\x92\x16\x08\xd1\x6f\xb2\x0c\xbd\x13\xd6\x37\x41\xe4\x65\x42\x95\x16\x65\xd9\xd8\x96\x99\x72\x42\x2d\x0a\xf3\x6c\xcb\x76\x2c\xab\x99\x61\x15\x38\x30\xd6\x27\xb1\xcc\xa3\xd7\x1f\x43\x67\x45\xd6\x4f\x03\x87\xfc\x43\x1a\x6d\xb4\x41\x3f\x7d\xfe\x94\x3d\x2d\xdf\x20\xa6\x94\x76\x81\xe7\xf9\x7e\x24\x6e\xb8\x48\x51\xcd\x5d\x37\x34\xba\x72\xed\x97\x67\x49\x49\xea\x8e\xe1\x01\xe7\x2b\x38\xff\x2b\x00\x00\xff\xff\xae\x2d\x64\x19\xaa\x0c\x00\x00")

func resourcesKotlinPomXmlBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinPomXml,
		"resources/kotlin.pom.xml",
	)
}

func resourcesKotlinPomXml() (*asset, error) {
	bytes, err := resourcesKotlinPomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.pom.xml", size: 3242, mode: os.FileMode(420), modTime: time.Unix(1553649706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesKotlinStateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\xdb\x8e\xdb\x36\x10\x7d\xd7\x57\xcc\x0a\x41\x20\x21\x0b\xa2\x7d\x55\xe3\x64\x1d\x23\x28\xb6\x5d\x6c\x03\xec\xfe\x00\x57\x1e\xbb\xdc\xd0\xa4\x43\x8e\x8d\xba\x5c\xfe\x7b\x41\xea\x62\xd1\x92\x16\x68\x90\xbe\x55\x0f\xbe\x90\x73\x39\x73\xe6\xcc\x68\xcf\xeb\xaf\x7c\x8b\xe0\x1c\xbb\x7f\xf0\x3e\xcb\xc4\x6e\xaf\x0d\x81\x42\x62\xb5\x36\x6b\x1e\x3e\x91\x89\x35\x2a\x12\x74\x62\xcb\x27\x4b\x86\xd7\xf4\x85\x1b\x3a\x75\xc6\xcf\xfc\xc8\xd9\x81\x84\x64\xab\x83\x31\xa8\xea\xd3\x4c\x18\x8b\x46\x70\x29\xfe\xe6\x24\xb4\x62\xab\x70\xf1\xd0\x1d\x3d\x49\x9c\xf1\xaa\xb5\x8a\x39\x2d\xfb\x84\x52\xab\xad\x7d\xd4\xab\xf6\xa8\xf3\xa8\xf5\x8e\x6d\xb8\x25\x34\x7f\xed\x24\x7b\xe6\xf5\x57\xab\x15\xe3\x4a\x69\x6a\x72\xfd\x66\xb5\xba\xdd\x2a\x6d\xf0\x97\x2c\x73\x6e\x8d\x1b\xa1\x10\x72\x7d\x44\x63\xc4\x1a\x73\xef\x9d\x13\x1b\xc0\x6f\xc0\xee\xf9\x0e\x21\x97\x42\x21\x37\xb7\xeb\xdc\xfb\xce\x08\x8e\x5c\x3a\x87\xd2\xa2\xf7\x47\x6e\x9c\x43\xb5\x0e\x7e\xf1\x2b\xeb\xfd\x63\x59\x2b\xc9\xad\x85\x3c\xf7\x3e\xbb\x19\xd7\x59\xc7\x5b\xe7\x58\x34\xf3\xbe\x70\xce\x70\xb5\x45\x78\x23\xae\xe1\x0d\x27\x32\x50\x2d\x80\x2d\x89\x8c\x78\x3a\x10\xda\x16\x9e\x0a\x16\xf0\x53\xf8\x97\x5f\xe7\x7d\x6e\x38\x72\x03\xce\x45\xc7\x08\xdf\xfb\x0a\x9c\x6b\x22\xbd\xc0\xaf\x48\xbf\x6b\x92\x42\x3d\x9e\xf6\x78\x2e\xb4\x31\xbf\xb5\x7f\xec\x03\x43\x5c\x02\x99\x03\x7a\xff\x31\xad\xab\xac\x66\xbb\xd1\x35\xe1\x81\x38\xa1\xcb\x1a\x6a\x60\x82\x85\xd9\x08\x77\x91\xe4\xe8\x3f\xc3\xd4\xcd\xa8\xe5\xc5\x99\xb6\xee\xa8\xaa\x22\xa1\xe5\x8f\xe6\xd5\x39\xc2\xdd\x5e\x72\x1a\x2a\xa5\x89\xe3\xfd\x0f\x27\x1c\x3a\xc6\xa3\xfd\x80\x40\xef\xa1\x8a\x45\x0d\x4e\x7a\x9f\xac\xfb\x05\x90\x01\x00\x0c\xc5\x0a\x7b\x6e\x48\xd4\x62\xcf\x15\x59\xa8\xe0\x4e\x58\x7a\x9f\x4c\xf0\x87\xe8\x13\x9e\x9b\xf3\x84\xf4\x67\x5b\xa4\xa2\x74\xd0\xff\x0f\xcf\x28\xec\x02\x96\xc6\xf0\xd3\x44\xec\xa2\x4c\x3c\x03\x3f\x10\xc9\xf9\x32\xf0\xf7\x3e\x31\x32\x48\x07\xa3\x92\x0c\xfd\xbd\xcf\xd2\x0a\x37\x07\x05\xa4\x1f\xc8\x08\xb5\x2d\x4a\xa8\xa0\xf9\xe9\xb2\x01\x58\x03\xcf\x56\xab\xaa\xb9\x81\x05\xe4\x2e\xcf\x06\x88\x5a\x75\x4c\x2a\x63\x68\x37\xd3\xc0\x0d\x8f\xcb\xe0\x6c\x19\x92\xc1\xa2\xf9\x7a\xd7\x2b\x02\x5e\xe0\x51\x37\x8a\x68\x81\x78\x0f\xef\x20\xbf\x4e\xb0\xe0\x45\x2c\xb1\x29\x52\x89\xc1\xd5\x02\xd4\x41\xca\x08\xa7\xc3\x12\xc9\xf7\x1e\xde\xbe\xbd\x10\xe4\xd5\x15\x13\xf6\x5e\xd3\xe7\xdd\x9e\x4e\x45\xd9\x8b\x2b\xa1\xfb\xfb\xf1\x42\xc2\x4f\xb2\x09\xa7\xa2\xb3\xb5\xd1\xfb\x3b\x6e\xa9\xf8\xb9\x9c\xa3\x2b\xf7\x83\xf8\xad\x10\xc2\x55\x36\xd7\x7c\xfc\x76\xe0\xd2\x16\x9a\xfe\x44\x53\xc1\x52\x9d\x3e\x96\x15\x7c\xd2\x5a\x22\x57\x00\x2e\xa1\x32\x1a\x81\x18\x6e\x87\x12\xdc\x48\xda\xa4\x61\x01\x8d\x2d\xb7\x30\xd8\x35\xe5\x85\x69\x88\xf5\x39\xe4\x3f\x67\x5c\xc4\x81\xce\x46\xea\x9a\xdd\x3d\x17\xe3\xd1\x6e\xce\xd1\x82\x48\xcc\xc6\xaa\x58\x34\xaa\x08\x0a\x20\xcd\xa6\x2f\x53\xf4\x31\x4e\x83\xfe\x12\x74\x78\xda\x35\x5e\xfc\xab\x44\xad\x36\x4b\x78\x79\x81\x19\xdd\xbe\x8e\x70\x0c\xb1\x95\x40\x1c\xb2\x31\x40\x37\xb2\xbf\x1c\xd3\x38\x1a\x53\x1c\xb6\x3c\x5e\x8d\x06\x26\xbc\x99\xb8\x50\x76\x29\x65\x11\x91\x76\x20\xb9\x85\x95\x96\x12\xeb\xd0\x98\xf7\x83\x39\x49\x56\xfd\xbd\x6e\xa7\xf1\xc3\x44\x35\xaf\x56\x04\x93\x1b\xa0\x87\x0a\x13\x58\x5b\xf1\x0f\x61\x7e\x67\xd6\x74\x68\x87\x1c\x4f\x86\x7b\x45\x39\x97\x8a\x9e\x29\xe8\x3f\x68\x54\x22\xa9\xff\xbb\x35\x80\x33\xdf\xad\xcb\x60\x53\xc1\x5b\x34\x6d\x94\xf3\xab\x78\x6a\x06\x27\x91\xfb\x76\x7b\xfb\xec\x9f\x00\x00\x00\xff\xff\x1d\x40\xe2\xb2\x6b\x0c\x00\x00")

func resourcesKotlinStateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_resourcesKotlinStateTemplate,
		"resources/kotlin.state.template",
	)
}

func resourcesKotlinStateTemplate() (*asset, error) {
	bytes, err := resourcesKotlinStateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/kotlin.state.template", size: 3179, mode: os.FileMode(420), modTime: time.Unix(1553576711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/kotlin.concept.template": resourcesKotlinConceptTemplate,
	"resources/kotlin.contract.template": resourcesKotlinContractTemplate,
	"resources/kotlin.pom.xml": resourcesKotlinPomXml,
	"resources/kotlin.state.template": resourcesKotlinStateTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"kotlin.concept.template": &bintree{resourcesKotlinConceptTemplate, map[string]*bintree{}},
		"kotlin.contract.template": &bintree{resourcesKotlinContractTemplate, map[string]*bintree{}},
		"kotlin.pom.xml": &bintree{resourcesKotlinPomXml, map[string]*bintree{}},
		"kotlin.state.template": &bintree{resourcesKotlinStateTemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

